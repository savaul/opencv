(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    247835,       8569]
NotebookOptionsPosition[    206160,       7287]
NotebookOutlinePosition[    214236,       7509]
CellTagsIndexPosition[    212730,       7471]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Wolfram Programming Language Fundamentals\
\>", "Section",
 CellChangeTimes->{
  3.556739694069112*^9, 3.5569902105383787`*^9, {3.5835124539586487`*^9, 
   3.583512469546502*^9}, {3.583513380555977*^9, 3.583513404302519*^9}},
 FontFamily->"Courier",
 FontSize->18,
 FontWeight->"Plain"],

Cell["Professor Richard J. Gaylord", "Text",
 CellChangeTimes->{{3.556740561035553*^9, 3.5567405634264393`*^9}, {
  3.5930800641717873`*^9, 3.593080066674902*^9}},
 FontFamily->"Courier",
 FontSize->16,
 FontColor->RGBColor[0.5, 0, 0.5]],

Cell[TextData[StyleBox["rjgaylord@gmail.com",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.556740561035553*^9, 3.5567405634264393`*^9}, {
  3.5930800641717873`*^9, 3.5930800899542313`*^9}},
 FontFamily->"Courier",
 FontSize->16,
 FontColor->RGBColor[0.5, 0, 0.5]],

Cell["", "Text",
 CellChangeTimes->{{3.5568827688164597`*^9, 3.556882769133041*^9}}],

Cell["", "Text",
 CellChangeTimes->{{3.556740220759757*^9, 3.55674022551556*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "These notes form the basis of a series of lectures in which the fundamental \
principles underlying ",
 StyleBox["the ",
  FontSlant->"Italic"],
 "Wolfram programming language (WL) are discussed and illustrated with \
carefully chosen examples. This is not a transcription of those lectures, but \
rather, the note set that was used to create a set of transparencies which I \
showed and spoke about during my lectures. These notes formed the basis for \
both a single 6-hour one-day lecture and a series of four 90-minute lectures, \
field-tested over many years, to students and professionals at university, \
commercial and government organizations. In the final section of this note \
set, the use of WL in writing various programs for the \[OpenCurlyQuote]Game \
of Life\[CloseCurlyQuote] is demonstrated."
}], "Text",
 CellChangeTimes->{
  3.5567405860913467`*^9, {3.556879564646688*^9, 3.5568797130274057`*^9}, 
   3.5568802043273706`*^9, 3.556882025707424*^9, {3.5573139177384987`*^9, 
   3.557313942248302*^9}, {3.5573139726857567`*^9, 3.557313974156137*^9}, {
   3.5573140101295137`*^9, 3.5573140107345877`*^9}, {3.557314063644805*^9, 
   3.557314073694025*^9}, {3.583513415431081*^9, 3.58351346523195*^9}, {
   3.583513624685248*^9, 3.58351369694735*^9}, {3.583919928061974*^9, 
   3.583919929062846*^9}, {3.583919971538656*^9, 3.5839199932073717`*^9}, {
   3.583920055296315*^9, 3.583920147142684*^9}, {3.58392052270037*^9, 
   3.5839205697041073`*^9}, {3.583920611256152*^9, 3.583920727863721*^9}, {
   3.583921214120571*^9, 3.583921216120112*^9}, {3.583921498831888*^9, 
   3.583921522750477*^9}, {3.5840101864271507`*^9, 3.584010270060478*^9}, {
   3.5840108339735394`*^9, 3.5840108436101913`*^9}, {3.58401087804335*^9, 
   3.584010894330435*^9}, {3.584010944259362*^9, 3.584010948642342*^9}, {
   3.584012859008206*^9, 3.584012898369646*^9}, {3.5840129378599358`*^9, 
   3.5840129637569027`*^9}, {3.584013085776388*^9, 3.584013089532242*^9}, {
   3.592960584603863*^9, 3.592960712974015*^9}, {3.593003543926886*^9, 
   3.593003580051806*^9}, 3.593080215961773*^9, {3.593159950036356*^9, 
   3.5931599579107847`*^9}, {3.593160068921247*^9, 3.593160070267021*^9}, {
   3.594627392066731*^9, 3.594627414704376*^9}, {3.594628370052086*^9, 
   3.59462838479249*^9}, {3.5947133142489634`*^9, 3.594713322850874*^9}},
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
In order to use WL efficiently, you need to understand the details of how a \
WL program is executed when it is entered and run. This tutorial is intended \
to provide you with the necessary background for writing your own code in an \
optimum manner.\
\>", "Text",
 CellChangeTimes->{{3.5835134758008947`*^9, 3.5835135207193213`*^9}, {
  3.5835137122382402`*^9, 3.5835137165023003`*^9}, {3.5835138399554996`*^9, 
  3.583513911675881*^9}, {3.583517526484056*^9, 3.5835175442609043`*^9}, {
  3.5839207433822107`*^9, 3.583920745211479*^9}, {3.58392079205833*^9, 
  3.5839207973949966`*^9}, {3.583920890339643*^9, 3.583920897836038*^9}, {
  3.5839209668923063`*^9, 3.583920969740484*^9}, {3.583921035815028*^9, 
  3.583921054854879*^9}, {3.5839210992531548`*^9, 3.583921112691556*^9}, {
  3.583921232456964*^9, 3.583921243349552*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
Note: This material will also make you more comfortable with WL which often \
seems obscure, even enigmatic, when first encountered by someone whose \
programming experience is with one of the traditional procedural languages.\
\>", "Text",
 CellChangeTimes->{{3.583513733908465*^9, 3.583513738229536*^9}, {
  3.58351758173349*^9, 3.583517587657536*^9}, {3.583920252860824*^9, 
  3.5839202794848967`*^9}, {3.583921134925181*^9, 3.583921146724218*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
In this note set, the following aspects of WL are emphasized: the nature of \
expressions, how expressions are evaluated, how pattern-matching works, \
creating rewrite rules, and using higher-order functions.\
\>", "Text",
 CellChangeTimes->{3.583513753572773*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell["Summing the elements in a list", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "Consider the data structure ",
 StyleBox["{1,2,3}", "MR"],
 ". How can we add up the elements in the list?"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"Plus", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[1]:="],

Cell[BoxData["6"], "Output",
 FontSize->14,
 CellLabel->"Out[1]="]
}, Open  ]],

Cell["What\[CloseCurlyQuote]s going on here?", "Text",
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell["Everything is an expression", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 StyleBox["Every",
  FontSlant->"Italic"],
 " quantity entered into WL is represented internally as an expression. An \
expression has the form"
}], "Text",
 CellChangeTimes->{3.583513947301177*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"head", "[", 
  RowBox[{
  "arg1", ",", " ", "arg2", ",", " ", "\[Ellipsis]", ",", " ", "argn"}], 
  "]"}]], "DisplayMath",
 FontSize->14],

Cell[TextData[{
 "where the ",
 StyleBox["head", "MR"],
 " and ",
 StyleBox["argi", "MR"],
 " can be other expressions."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "For example, if we look at two common quantities, a list data structure, ",
 StyleBox["{a,b,c}", "MR"],
 ", and an arithmetic operation, ",
 StyleBox["a+b+c", "MR"],
 ", they appear to be quite different, but if we use the ",
 StyleBox["FullForm", "MR"],
 " function to look at their internal representation"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[2]:="],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 FontSize->14,
 CellLabel->"Out[2]//FullForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"a", "+", "b", "+", "c"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[3]:="],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 FontSize->14,
 CellLabel->"Out[3]//FullForm="]
}, Open  ]],

Cell["we see that they differ only in their heads.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "The use of a common expression structure to represent everything is not \
merely cosmetic; it allows us to perform some computations quite simply. For \
example, to add the elements in a list, it is only necessary to change the \
head of the expression, ",
 StyleBox["List", "MR"],
 ", to ",
 StyleBox["Plus", "MR"],
 ". This can be done using the built-in ",
 StyleBox["Apply", "MR"],
 " function."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Apply"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[4]:="],

Cell[BoxData[
 RowBox[{"\<\"Apply[f, expr] or f @@ expr replaces the head of expr by f. \
Apply[f, expr, levelspec] replaces heads in parts of expr specified by \
levelspec.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"Apply"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298628325-7411773"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"Apply", "[", 
   RowBox[{"Plus", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"Plus", "@@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"1", "+", "2", "+", "3"}],
    HoldForm], ",", 
   TagBox["6",
    HoldForm]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[5]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changing a sum into a list", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
The obvious approach to this task is to do the same sort of thing that we did \
to add the elements in a list.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"List", ",", 
   RowBox[{"a", "+", "b", "+", "c"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[6]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[6]="]
}, Open  ]],

Cell["\<\
This works when the list elements are symbols, but it \
doesn\[CloseCurlyQuote]t work for a list of numbers.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"List", ",", 
   RowBox[{"1", "+", "2", "+", "3"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[7]:="],

Cell[BoxData["6"], "Output",
 FontSize->14,
 CellLabel->"Out[7]="]
}, Open  ]],

Cell["\<\
In order to understand the reason for the different results obtained above, \
it is necessary to understand how WL evaluates expressions. \
\>", "Text",
 CellChangeTimes->{3.583513991722476*^9, 3.5947082788764057`*^9},
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expressions", "Section",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[CellGroupData[{

Cell["Non-atomic expressions", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "Non-atomic expressions have parts which can be extracted from the \
expression with the ",
 StyleBox["Part", "MR"],
 " function, and can be replaced with the ",
 StyleBox["ReplacePart", "MR"],
 " function. For example:"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "7", ",", "c"}], "}"}], ",", "1"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[8]:="],

Cell[BoxData["a"], "Output",
 FontSize->14,
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "7", ",", "c"}], "}"}], "[", 
  RowBox[{"[", "0", "]"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[9]:="],

Cell[BoxData["List"], "Output",
 FontSize->14,
 CellLabel->"Out[9]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"a", "+", "b", "+", "c"}], ",", "0"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[10]:="],

Cell[BoxData["Plus"], "Output",
 FontSize->14,
 CellLabel->"Out[10]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "7", ",", "c"}], "}"}], ",", "e", ",", "2"}], 
  "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[11]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "e", ",", "c"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[11]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Atomic expressions", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
Atomic expressions constitute the basic \[OpenCurlyDoubleQuote]building \
blocks\[CloseCurlyDoubleQuote] of WL. There are three kinds of atomic \
expressions:\
\>", "Text",
 CellChangeTimes->{3.583514011908882*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "1. A symbol, consisting of a letter followed by letters and numbers (eg., ",
 StyleBox["darwin", "MR"],
 ")"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "2. Four kinds of numbers:\n\tinteger numbers (eg., ",
 StyleBox["4", "MR"],
 ")\n\treal numbers (eg., ",
 StyleBox["5.201", "MR"],
 ")\n\tcomplex numbers (eg., ",
 StyleBox["3+4I", "MR"],
 ")\n\trational numbers (eg., ",
 StyleBox["5/7", "MR"],
 ")"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "3. A string, comprised of letters, numbers and spaces (ie., ASCII \
characters) between quotes (eg., ",
 StyleBox["\"Computer Simulations with ", "MR"],
 StyleBox["Mathematica", "MR",
  FontSlant->"Italic"],
 StyleBox["\"", "MR"],
 ")"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
Atomic expressions differ from non-atomic expressions in several ways:\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "The ",
 StyleBox["FullForm", "MR"],
 " of an atomic expression is the atom itself."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FullForm", "[", "darwin", "]"}], ",", 
   RowBox[{"FullForm", "[", "4", "]"}], ",", 
   RowBox[{
   "FullForm", "[", "\"\<Computer Simulations with Mathematica\>\"", "]"}]}], 
  "}"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[12]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    StyleBox["darwin",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], ",", 
   TagBox[
    StyleBox["4",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], ",", 
   TagBox[
    StyleBox["\"\<Computer Simulations with Mathematica\>\"",
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[12]="]
}, Open  ]],

Cell["\<\
The head (or 0th part) of an atom is the type of atom that it is.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Head", "[", "List", "]"}], ",", 
   RowBox[{
   "Head", "[", "\"\<Computer Simulations with Mathematica\>\"", "]"}], ",", 
   " ", 
   RowBox[{"5", "[", 
    RowBox[{"[", "0", "]"}], "]"}]}], "}"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[13]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Symbol", ",", "String", ",", "Integer"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[13]="]
}, Open  ]],

Cell["\<\
An atomic expression has no parts which can be extracted or replaced.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{"\"\<Computer Simulations with Mathematica\>\"", ",", "1"}], 
  "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[14]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Part", "::", "\<\"partd\"\>"}], ":", 
  " ", "\<\"Part specification \\!\\(\\\"Computer Simulations with \
Mathematica\\\" \[LeftDoubleBracket] 1 \[RightDoubleBracket]\\) is longer \
than depth of object. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::partd\\\"]\\)\"\>"}]], "Message",
 FontSize->14,
 CellLabel->"From In[14]:="],

Cell[BoxData[
 RowBox[{"\<\"Computer Simulations with Mathematica\"\>", 
  "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], "Output",
 FontSize->14,
 CellLabel->"Out[14]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compound expressions", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "A ",
 StyleBox["CompoundExpression", "MR"],
 " is an expression consisting of a sequence of expressions separated by \
semi-colons (",
 StyleBox[";", "MR"],
 ")."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"expr1", ";", "expr2", ";", "\[Ellipsis]", ";", 
  "exprn"}]], "DisplayMath",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"5", "+", "3"}]}], ";", 
  RowBox[{"4", "a"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[15]:="],

Cell[BoxData["32"], "Output",
 FontSize->14,
 CellLabel->"Out[15]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Entering an expression", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
When an expression is entered in WL, it is evaluated and the result is \
returned, unless it is followed by a semi-colon.\
\>", "Text",
 CellChangeTimes->{3.583513800041812*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "^", "3"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[16]:="],

Cell[BoxData["64"], "Output",
 FontSize->14,
 CellLabel->"Out[16]="]
}, Open  ]],

Cell["\<\
When an expression is followed by a semi-colon, the expression is also \
evaluated, even though nothing is returned.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "-", "6"}], ";"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[17]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "+", "3"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[18]:="],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 FontSize->14,
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["%%"], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{"-", "4"}]], "Output",
 FontSize->14,
 CellLabel->"Out[19]="]
}, Open  ]],

Cell["\<\
When the entered expression is a compound expression, its contents are \
evaluated sequentially and the result of the last evaluation is returned.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{
   RowBox[{"a", "=", 
    RowBox[{"3", "+", "5"}]}], ";", 
   RowBox[{"4", "a"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[20]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"3", "+", "5"}]}], ";", 
     RowBox[{"4", " ", "a"}]}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"3", "+", "5"}],
        HoldForm], ",", 
       TagBox["8",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"a", "=", "8"}],
      HoldForm], ",", 
     TagBox["8",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox["a",
        HoldForm], ",", 
       TagBox["8",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"4", " ", "8"}],
      HoldForm], ",", 
     TagBox["32",
      HoldForm]}], "}"}], ",", 
   TagBox["32",
    HoldForm]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[20]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["How expressions are evaluated", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
WL is a term rewriting system (TRS). Whenever an expression is entered, it is \
evaluated by term rewriting using rewrite rules. These rules consist of two \
parts: a pattern on the left-hand side and a replacement text on the \
right-hand side. When the lhs of a rewrite rule is found to pattern-match \
part of the expression, that part is replaced by the rhs of the rule, after \
substituting values in the expression which match labelled blanks in the \
pattern into the rhs of the rule. Evaluation then proceeds by searching for \
further matching rules until no more are found.\
\>", "Text",
 CellChangeTimes->{3.583514042653496*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
The evaluation process in WL can be easily understood with the following \
analogy:\
\>", "Text",
 CellChangeTimes->{3.583514054525419*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
Think of your experiences with using a handbook of mathematical formulas, \
such as the integral tables of Gradshteyn and Ryzhik. In order to solve an \
integral, you consult the handbook which contains formulas consisting of a \
left-hand side (lhs) and a right-hand side (rhs), separated by an \
\[OpenCurlyQuote]equals\[CloseCurlyQuote] sign. You look for an integration \
formula in the handbook whose left-hand side has the same form as your \
integral.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
Note: While no two formulas in the handbook have the identical lhs, there may \
be several whose lhs have the same form as your integral (eg., one lhs might \
have specific values in the integration limits of in the integrand, while \
another lhs has unspecified (dummy) variables for these quantities). When \
this happens, you use the formula whose lhs gives the closest fit to your \
integral.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "1"], 
   RowBox[{
    SuperscriptBox["x", "2"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]], "DisplayMath",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     SuperscriptBox["x", "n"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   FractionBox[
    SuperscriptBox["x", 
     RowBox[{"n", "+", "1"}]], 
    RowBox[{"n", "+", "1"}]]}], TraditionalForm]], "DisplayMath",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   FractionBox[
    SuperscriptBox["x", "3"], "3"]}], TraditionalForm]], "DisplayMath",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     SuperscriptBox["x", "n"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["b", 
      RowBox[{"n", "+", "1"}]], "-", 
     SuperscriptBox["a", 
      RowBox[{"n", "-", "1"}]]}], 
    RowBox[{"n", "+", "1"}]]}], TraditionalForm]], "DisplayMath",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     SuperscriptBox["x", "n"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   FractionBox["1", 
    RowBox[{"n", "+", "1"}]]}], TraditionalForm]], "DisplayMath",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["b", "3"], "-", 
     SuperscriptBox["a", "3"]}], 
    RowBox[{"n", "+", "1"}]]}], TraditionalForm]], "DisplayMath",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   FractionBox["1", "3"]}], TraditionalForm]], "DisplayMath",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
You then replace your integral with the right-hand side of the matching lhs \
and you substitute the specific values in your integral for the corresponding \
variable symbols in the rhs.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
Finally, you look through the handbook for formulas (eg., trigonometric \
identities or algebraic manipulation) that can be used to change the answer \
further.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
This depiction provides an excellent description of the WL evaluation process.\
\>", "Text",
 CellChangeTimes->{3.5835140969377527`*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
However, the application of the term rewriting process to a WL expression \
requires a bit more discussion because a WL expression consists of parts, a \
head and zero or more arguments which are themselves expressions.\
\>", "Text",
 CellChangeTimes->{{3.583514104949301*^9, 3.583514112098715*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"expr", "[", 
  RowBox[{"expr1", ",", "expr2", ",", "\[Ellipsis]", ",", "exprn"}], 
  "]"}]], "DisplayMath",
 FontSize->14],

Cell["\<\
It is therefore necessary to understand the order in which the various parts \
of an expression are evaluated by term rewriting.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
The implementation of the evaluation procedure is (with a few exceptions) \
straightforward:\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
1. If the expression is a number or a string, it isn\[CloseCurlyQuote]t \
changed.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
2. If the expression is a symbol, it is rewritten if there is an applicable \
rewrite rule in the global rule base; otherwise, it is unchanged.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
3. If the expression is not a number, string or symbol, its parts are \
evaluated in a specific order:\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["a. The head of the expression is evaluated.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "b. The arguments of the expression are evaluated from left to right in \
order. An exception to this occurs when the head is a symbol with a hold \
attribute (eg., ",
 StyleBox["HoldFirst", "MR"],
 ", ",
 StyleBox["HoldRest", "MR"],
 ", or ",
 StyleBox["HoldAll", "MR"],
 "), so that some of its arguments are left in their unevaluated forms \
(unless they, in turn, have the head ",
 StyleBox["Evaluate", "MR"],
 "). For example, the ",
 StyleBox["Set", "MR"],
 " or ",
 StyleBox["SetDelayed", "MR"],
 " function which we will discuss in a moment."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "4. After the head and arguments of an expression are each completely \
evaluated, the expression consisting of the evaluated head and arguments is \
rewritten, after making any necessary changes to the arguments based on the ",
 StyleBox["Attributes", "MR"],
 " (such as ",
 StyleBox["Flat", "MR"],
 ", ",
 StyleBox["Listable", "MR"],
 ", ",
 StyleBox["Orderless", "MR"],
 ") of the head, if there is an applicable rewrite rule in the global rule \
base."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
5. After carrying out the previous steps, the resulting expression is \
evaluated in the same way and then the result of that evaluation is \
evaluated, and so on until there are no more applicable rewrite rules.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
The details of the term-rewriting process in steps 2 and 4 are as follows:\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
a. part of an expression is pattern-matched by the lhs of a rewrite rule\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
b. the values which match labelled blanks in the pattern are substituted into \
the rhs of the rewrite rule and evaluated.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
c. the pattern-matched part of the expression is replaced with the evaluated \
result.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
With this understanding of the evaluation procedure, we can now understand \
what happened when we entered\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"List", ",", 
   RowBox[{"1", "+", "2", "+", "3"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[21]:="],

Cell[BoxData["6"], "Output",
 FontSize->14,
 CellLabel->"Out[21]="]
}, Open  ]],

Cell[TextData[{
 "In evaluating this expression, the argument ",
 StyleBox["1+2+3", "MR"],
 " was evaluated before the ",
 StyleBox["Apply", "MR"],
 " function was employed."
}], "Text",
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controlling the evaluation", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "We should point out that the user can (to some extent) wrest control of the \
evaluation process from WL and either force or prevent evaluation. We won\
\[CloseCurlyQuote]t go into the details of doing this but we can indicate \
functions that can be used for this purpose: ",
 StyleBox["Hold", "MR"],
 ", ",
 StyleBox["HoldAll", "MR"],
 ", ",
 StyleBox["HoldFirst", "MR"],
 ", ",
 StyleBox["HoldRest", "MR"],
 ", ",
 StyleBox["HoldForm", "MR"],
 ", ",
 StyleBox["HeldPart", "MR"],
 ", ",
 StyleBox["ReleaseHold", "MR"],
 ", ",
 StyleBox["Evaluate", "MR"],
 ", ",
 StyleBox["Unevaluated", "MR"],
 ", and ",
 StyleBox["Literal", "MR"],
 "."
}], "Text",
 CellChangeTimes->{3.5835141527145433`*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "In order to turn the sum into a list, it is necessary to prevent the \
argument ",
 StyleBox["Plus[1,2,3]", "MR"],
 " from being prematurely evaluated before the symbol ",
 StyleBox["Plus", "MR"],
 " is replaced with the symbol ",
 StyleBox["List", "MR"],
 "."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"List", ",", 
   RowBox[{"Unevaluated", "[", 
    RowBox[{"1", "+", "2", "+", "3"}], "]"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[22]="]
}, Open  ]],

Cell["\<\
Since term rewriting is based on pattern-matching, we need to look at the \
various sorts of patterns that WL recognizes.\
\>", "Text",
 CellChangeTimes->{3.583514168889086*^9},
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Patterns", "Section",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[CellGroupData[{

Cell["Blanks", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "Patterns are defined syntactically, ie., by the internal representation of \
an expression as given using ",
 StyleBox["FullForm", "MR"],
 "."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "In general, an expression will be matched by several patterns, of differing \
specificity. For example, constructing as many patterns to match ",
 StyleBox["x^2", "MR"],
 ", in order of increasing generality."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "1. ",
 StyleBox["x", "MR"],
 " raised to the power of two."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "2. ",
 StyleBox["x", "MR"],
 " raised to the power of a number."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "3. ",
 StyleBox["x", "MR"],
 " raised to the power of something."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["4. a symbol raised to the power of two.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["5. a symbol raised to the power of a number.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["6. a symbol raised to the power of something.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["7. something raised to the power of two.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["8. something raised to the power of a number.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["9. something raised to the power of something.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["10. something.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "The term \[OpenCurlyQuote]something\[CloseCurlyQuote] used above can be \
replaced by the term \[OpenCurlyQuote]an expression\[CloseCurlyQuote], so \
that for example, the last case says that ",
 StyleBox["x^2", "MR"],
 " pattern-matches an expression (which is true since ",
 StyleBox["x^2", "MR"],
 " is an expression). To be precise, we need a notation to designate a \
pattern that has the form of an expression. We also need to designate a \
pattern that has the form of a sequence of expressions, consecutive \
expressions separated by commas."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "Patterns are defined in WL as expressions that ",
 StyleBox["may",
  FontSlant->"Italic"],
 " contain blanks. A pattern may contain a single (",
 StyleBox["_", "MR"],
 ") blank, a double (",
 StyleBox["__", "MR"],
 ") blank, or a triple (",
 StyleBox["___", "MR"],
 ") blank (the differences will be discussed shortly)."
}], "Text",
 CellChangeTimes->{3.583514186978375*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "Note: A pattern can be labelled (given a name) by preceding the blank(s) by \
a symbol, eg., ",
 StyleBox["name_", "MR"],
 " or ",
 StyleBox["name__", "MR"],
 " or ",
 StyleBox["name___", "MR"],
 ". The labelled pattern is matched by exactly the same expression that \
matches its unlabeled counterpart (pattern labeling, as we will see, is used \
to create dummy variables)."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "Note: A blank can be followed by a symbol, eg., ",
 StyleBox["_h", "MR"],
 " or ",
 StyleBox["__h", "MR"],
 " or ",
 StyleBox["___h", "MR"],
 ", in which case, an expression must have the head ",
 StyleBox["h", "MR"],
 " to match the pattern (this is used to perform type checking)."
}], "Text",
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pattern-matching an expression", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "We can use the ",
 StyleBox["MatchQ", "MR"],
 " function to determine if a particular pattern matches an expression or a \
sequence of expressions. The most specific pattern-match is between an \
expression and itself."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"x", "^", "2"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[23]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[23]="]
}, Open  ]],

Cell["\<\
To make more general (less specific) pattern-matches, a single blank is used \
to represent an individual expression, which can be any data object.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "We\[CloseCurlyQuote]ll work with ",
 StyleBox["x^2", "MR"],
 " to demonstrate the use of the ",
 StyleBox["Blank", "MR"],
 " function in pattern-matching. In the following examples (which are \
arbitrarily chosen from the many possible pattern matches), we\
\[CloseCurlyQuote]ll first state the pattern-match and then check it using ",
 StyleBox["MatchQ", "MR"],
 "."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern matches \[OpenCurlyQuote]an expression\[CloseCurlyQuote]."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "_"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[24]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[24]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]",
 StyleBox["x", "MR"],
 " raised to the power of an expression\[CloseCurlyQuote]."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"x", "^", "_"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[25]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[25]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]",
 StyleBox["x", "MR"],
 " raised to the power of an integer\[CloseCurlyQuote] (to put it more \
formally, \[OpenCurlyQuote]",
 StyleBox["x", "MR"],
 " raised to the power of an expression whose head is ",
 StyleBox["Integer", "MR"],
 "\[CloseCurlyQuote])."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"x", "^", "_Integer"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[26]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[26]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]an expression whose head is ",
 StyleBox["Power", "MR"],
 "\[CloseCurlyQuote]."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "_Power"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[27]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[27]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]an expression whose head is a symbol and \
which is raised to the power ",
 StyleBox["2", "MR"],
 "\[CloseCurlyQuote]."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_Symbol", "^", "2"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[28]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[28]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]an expression raised to the power ",
 StyleBox["2", "MR"],
 "\[CloseCurlyQuote]."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_", "^", "2"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[29]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[29]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]an expression whose head is a symbol and \
which is raised to the power of an expression whose head is an integer\
\[CloseCurlyQuote] (or stated less formally, \[OpenCurlyQuote]a symbol raised \
to the power of an integer\[CloseCurlyQuote])."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_Symbol", "^", "_Integer"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[30]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[30]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]an expression raised to the power of an \
expression\[CloseCurlyQuote]."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_", "^", "_"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[31]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[31]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["x^2", "MR"],
 " pattern-matches \[OpenCurlyQuote]",
 StyleBox["x", "MR"],
 " raised to the power of an expression\[CloseCurlyQuote] (the label ",
 StyleBox["y", "MR"],
 " does not affect the pattern-match)."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"x", "^", "y_"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[32]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[32]="]
}, Open  ]],

Cell["As a final example, we look at", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"5", "^", "2"}], ",", 
   RowBox[{"_", "^", "_"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[33]:="],

Cell[BoxData["False"], "Output",
 FontSize->14,
 CellLabel->"Out[33]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pattern-matching a sequence of one or more expressions", \
"SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "A sequence consists of a number of expression separated by commas. A double \
blank represents a sequence of one or more expressions and ",
 StyleBox["__h", "MR"],
 " represents a sequence of one or more expressions, each of which has head ",
 StyleBox["h", "MR"],
 "."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
For example a sequence in a list pattern-matches a double blank (note: we are \
pattern-matching the sequence in the list, not the list itself)\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", "__", "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[34]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[34]="]
}, Open  ]],

Cell["\<\
but the arguments of an empty list (which has no arguments) do not \
pattern-match a double blank.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "__", "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[35]:="],

Cell[BoxData["False"], "Output",
 FontSize->14,
 CellLabel->"Out[35]="]
}, Open  ]],

Cell["\<\
An expression that pattern-matches a blank will also pattern match a double \
blank. For example,\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "__"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[36]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[36]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pattern-matching a sequence of zero or more expressions", \
"SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "A triple blank represents a sequence of zero or more expressions and ",
 StyleBox["___h", "MR"],
 " represents a sequence of zero or more expressions, each of which has the \
head ",
 StyleBox["h", "MR"],
 ". For example, the triple blank pattern-matches the empty list."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "___", "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[37]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[37]="]
}, Open  ]],

Cell["\<\
An expression that pattern-matches a blank and a sequence that \
pattern-matches a double blank pattern both pattern-match a triple blank \
pattern.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", "___"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[38]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[38]="]
}, Open  ]],

Cell[TextData[{
 "It is important to be aware that for the purposes of pattern-matching, a \
sequence is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " an expression. For example,"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", "_", "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[39]:="],

Cell[BoxData["False"], "Output",
 FontSize->14,
 CellLabel->"Out[39]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alternative pattern-matching", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
We can make a pattern-match less restrictive by specifying alternative \
patterns that can be matched.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{
    RowBox[{"{", "_", "}"}], "|", 
    RowBox[{"_", "^", "2"}]}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[40]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[40]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conditional pattern-matching", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
We can make a pattern-match more restrictive by making it contingent upon \
meeting certain conditions. (Note: satisfying these conditions will be a \
necessary, but not sufficient, requirement for a successful pattern-match.)\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "If the blanks of a pattern are followed by ",
 StyleBox["?test", "MR"],
 ", where ",
 StyleBox["test", "MR"],
 " is a predicate (ie., a function that returns a ",
 StyleBox["True", "MR"],
 " or ",
 StyleBox["False", "MR"],
 "), then a pattern-match is only possible if ",
 StyleBox["test", "MR"],
 " returns ",
 StyleBox["True", "MR"],
 " when applied to the ",
 StyleBox["entire",
  FontSlant->"Italic"],
 " expression. ",
 StyleBox["?test", "MR"],
 " is used with built-in predicate functions and with anonymous predicate \
functions."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_", "^", 
    RowBox[{"_", "?", "OddQ"}]}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[41]:="],

Cell[BoxData["False"], "Output",
 FontSize->14,
 CellLabel->"Out[41]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"2", ",", 
   RowBox[{"_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "3"}], "&"}], ")"}]}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[42]:="],

Cell[BoxData["False"], "Output",
 FontSize->14,
 CellLabel->"Out[42]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"2", ",", 
   RowBox[{"_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "1.5"}], "&"}], ")"}]}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[43]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[43]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"2", ",", 
   RowBox[{"_Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "3"}], "&"}], ")"}]}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[44]:="],

Cell[BoxData["False"], "Output",
 FontSize->14,
 CellLabel->"Out[44]="]
}, Open  ]],

Cell[TextData[{
 "If part of a labeled pattern is followed by ",
 StyleBox["/; condition", "MR"],
 ", where ",
 StyleBox["condition", "MR"],
 " contains labels appearing in the pattern, then a pattern-match is possible \
only if ",
 StyleBox["condition", "MR"],
 " returns ",
 StyleBox["True", "MR"],
 " when applied to the ",
 StyleBox["labelled parts",
  FontSlant->"Italic"],
 " of an expression. For example,"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"_", "^", "y_"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[45]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[45]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "^", "b"}], ",", 
   RowBox[{
    RowBox[{"_", "^", "y_"}], "/;", 
    RowBox[{
     RowBox[{"Head", "[", "y", "]"}], "\[Equal]", "Symbol"}]}]}], 
  "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[46]:="],

Cell[BoxData["True"], "Output",
 FontSize->14,
 CellLabel->"Out[46]="]
}, Open  ]],

Cell["\<\
With this understanding of how pattern-matching works in WL, we can discuss \
how to create our own rewrite rules which can be used in term rewriting.\
\>", "Text",
 CellChangeTimes->{3.583514248565734*^9},
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rewrite rules", "Section",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[CellGroupData[{

Cell["Built-in functions", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
WL provides many built-in functions that can be used for term rewriting. \
These rules are located in the global rule base whenever WL is running. \
Functions defined in a package are also placed in the global rule base during \
the session in which the package is loaded. Functions in the global rule base \
are always available for term rewriting and they are always used whenever \
applicable.\
\>", "Text",
 CellChangeTimes->{{3.5835142781590977`*^9, 3.583514295024721*^9}, {
  3.583517702369039*^9, 3.583517703979857*^9}},
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell["User-defined functions", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
In addition to the built-in rewrite rules, user-defined rewrite rules can be \
created and placed in the global rule base where they are always available, \
and always used, when applicable for the duration of the ongoing session. \
However, they are not automatically preserved beyond the session in which \
they are created.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "There are basically two ways to create a user-defined rewrite rule: with \
the ",
 StyleBox["Set", "MR"],
 " function and with the ",
 StyleBox["SetDelayed", "MR"],
 " function."
}], "Text",
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Declaring a value using the ",
 StyleBox["Set", "MB"],
 " (",
 StyleBox["=", "MB"],
 ") function"
}], "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "A value declaration is essentially a nickname for a value (eg., for a list \
or number) which can be used in place of the value. It is written using ",
 StyleBox["Set[lhs, rhs]", "MR"],
 " or, more commonly, as"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"lhs", "=", "rhs"}]], "DisplayMath",
 FontSize->14],

Cell["\<\
The lhs starts with a name, starting with a letter followed by letters and/or \
numbers (with no spaces). The rhs is either an expression or a compound \
expression enclosed in parentheses.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
Note: the name on the lhs may be followed by a set of square brackets \
containing a sequence of patterns or labelled patterns, and the rhs may \
contain the labels, without the blanks.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "For example, consider the following two simple ",
 StyleBox["Set", "MR"],
 " functions"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[47]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[47]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rand1", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], "]"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[48]:="],

Cell[BoxData["2"], "Output",
 FontSize->14,
 CellLabel->"Out[48]="]
}, Open  ]],

Cell[TextData[{
 "Notice that when a ",
 StyleBox["Set", "MR"],
 " function is entered, a value is returned (unless it is followed by a \
semi-colon). If we look into the global rule base to see what rewrite rules \
have been created when ",
 StyleBox["a", "MR"],
 " and ",
 StyleBox["rand1", "MR"],
 " were entered"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "a"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[49]:="],

Cell["Global`a", "Print",
 FontSize->14,
 CellTags->"Info3298628328-7397595"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"a", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["a"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628328-7397595"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rand1"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[50]:="],

Cell["Global`rand1", "Print",
 FontSize->14,
 CellTags->"Info3298628328-4448021"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"rand1", "=", "2"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["rand1"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628328-4448021"]
}, Open  ]],

Cell[TextData[{
 "we find that the rewrite rule associated with ",
 StyleBox["a", "MR"],
 " is the same as the ",
 StyleBox["Set", "MR"],
 " function we entered, but the rewrite rule associated with ",
 StyleBox["rand1", "MR"],
 " differs from the corresponding ",
 StyleBox["Set", "MR"],
 " function. The reason for this is that ",
 StyleBox["when a ",
  FontWeight->"Bold"],
 StyleBox["Set", "MB",
  FontWeight->"Bold"],
 StyleBox[" function is entered into the global rule base, its lhs is left \
unevaluated while its rhs is evaluated",
  FontWeight->"Bold"],
 " and when the rewrite rule that has been created is used, the unevaluated \
lhs and the evaluated rhs of the function are used. This property is known as \
the ",
 StyleBox["HoldFirst", "MR"],
 " attribute."
}], "Text",
 CellChangeTimes->{{3.5839197861461287`*^9, 3.58391978672232*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Set", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[51]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldFirst", ",", "Protected", ",", "SequenceHold"}], 
  "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[51]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "HoldFirst"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[52]:="],

Cell[BoxData[
 RowBox[{"\<\"HoldFirst is an attribute which specifies that the first \
argument to a function is to be maintained in an unevaluated form.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"HoldFirst"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298628328-8384155"]
}, Open  ]],

Cell[TextData[{
 "The reason for the ",
 StyleBox["Set", "MR"],
 " function having the ",
 StyleBox["HoldFirst", "MR"],
 " attribute is easily demonstrated by seeing what happens when ",
 StyleBox["Set", "MR"],
 " does not have this attribute."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Set", "[", 
  RowBox[{"a", ",", "6"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[53]:="],

Cell[BoxData["6"], "Output",
 FontSize->14,
 CellLabel->"Out[53]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[54]:="],

Cell[BoxData["6"], "Output",
 FontSize->14,
 CellLabel->"Out[54]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAttributes", "[", 
  RowBox[{"Set", ",", "HoldFirst"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[55]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Set", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[55]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Protected", ",", "SequenceHold"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[55]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Set", "[", 
  RowBox[{"a", ",", "7"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[55]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Set", "::", "\<\"setraw\"\>"}], ":", 
  " ", "\<\"Cannot assign to raw object \\!\\(6\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Set::setraw\\\"]\\)\"\>"}]], \
"Message",
 FontSize->14,
 CellLabel->"From In[55]:="],

Cell[BoxData["7"], "Output",
 FontSize->14,
 CellLabel->"Out[55]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"Set", ",", "HoldFirst"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[55]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Set", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[56]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldFirst", ",", "Protected", ",", "SequenceHold"}], 
  "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[56]="]
}, Open  ]],

Cell["\<\
When the rhs is a compound expression enclosed in parentheses, the \
expressions of the rhs are evaluated in sequence and the rhs of the resulting \
rewrite rule is the result of the final evaluation. For example,\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rand2", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"b", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";", 
    RowBox[{"RandomReal", "[", "b", "]"}]}], ")"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[57]:="],

Cell[BoxData[
 RowBox[{"-", "0.642185736420857`"}]], "Output",
 FontSize->14,
 CellLabel->"Out[57]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rand2"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[58]:="],

Cell["Global`rand2", "Print",
 FontSize->14,
 CellTags->"Info3298628328-8025855"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"rand2", "=", 
         RowBox[{"-", "0.642185736420857`"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["rand2"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628328-8025855"]
}, Open  ]],

Cell[TextData[{
 "What happened here is that the ",
 StyleBox["b", "MR"],
 " was first evaluated to give ",
 StyleBox["{-1,1}", "MR"],
 " and this value was then used to evaluate the random number function."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
The order of expressions on the rhs is important. An expression on the rhs \
must appear before it is used in another expression on the rhs. For example,\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rand3", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"RandomReal", "[", "c", "]"}], ";", 
    RowBox[{"c", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ")"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[59]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Random", "::", "\<\"randn\"\>"}], ":", 
  " ", "\<\"Range specification \\!\\(c\\) in \\!\\(Random[\\(\\(Real, \
c\\)\\)]\\) is not a valid number or pair of numbers. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Random::randn\\\"]\\)\"\>"}]], \
"Message",
 FontSize->14,
 CellLabel->"From In[59]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[59]="]
}, Open  ]],

Cell["\<\
Note that even though an error message was generated when the first \
expression in the compound expression was evaluated, the overall evaluation \
of the compound expression continued by evaluated the second expression and \
its value was then entered into the global rule base.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rand3"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[60]:="],

Cell["Global`rand3", "Print",
 FontSize->14,
 CellTags->"Info3298628329-3913320"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"rand3", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["rand3"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628329-3913320"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "c"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[61]:="],

Cell["Global`c", "Print",
 FontSize->14,
 CellTags->"Info3298628329-9296844"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"c", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["c"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628329-9296844"]
}, Open  ]],

Cell[TextData[{
 "When a ",
 StyleBox["Set", "MR"],
 " function is entered, both it and any ",
 StyleBox["Set", "MR"],
 " or ",
 StyleBox["SetDelayed", "MR"],
 " functions on the rhs create rewrite rules in the global rule base."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "b"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[62]:="],

Cell["Global`b", "Print",
 FontSize->14,
 CellTags->"Info3298628329-8766420"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"b", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["b"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628329-8766420"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "c"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[63]:="],

Cell["Global`c", "Print",
 FontSize->14,
 CellTags->"Info3298628329-8889146"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"c", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["c"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628329-8889146"]
}, Open  ]],

Cell[TextData[{
 "After a value has been declared by entering a ",
 StyleBox["Set", "MR"],
 " function, the appearance of the value\[CloseCurlyQuote]s name during an \
evaluation causes the value itself to be substituted in (which is why we say \
that it acts like a nickname). For example,"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", "rand2", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[64]:="],

Cell[BoxData["0.642185736420857`"], "Output",
 FontSize->14,
 CellLabel->"Out[64]="]
}, Open  ]],

Cell[TextData[{
 "What happened here was that the rewrite rule associated with ",
 StyleBox["rand2", "MR"],
 " in the global rule base was used as an argument to the ",
 StyleBox["Abs", "MR"],
 " function."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "The lhs of a rewrite rule can only be associated with one value at a time. \
When a ",
 StyleBox["Set", "MR"],
 " function is entered, the resulting rewrite rule \
\[OpenCurlyQuote]overwrites\[CloseCurlyQuote] any previous rewrite rule with \
the identical lhs. For example,"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"rand4", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "]"}]}], ";"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[65]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rand4"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[66]:="],

Cell["Global`rand4", "Print",
 FontSize->14,
 CellTags->"Info3298628329-9228028"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"rand4", "=", "2"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["rand4"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628329-9228028"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rand4", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "]"}]}], ";"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[67]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rand4"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[68]:="],

Cell["Global`rand4", "Print",
 FontSize->14,
 CellTags->"Info3298628329-9544687"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"rand4", "=", "1"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["rand4"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628329-9544687"]
}, Open  ]],

Cell[TextData[{
 "What we see is that the value of ",
 StyleBox["rand4", "MR"],
 " was ",
 StyleBox["2", "MR"],
 " after ",
 StyleBox["rand4", "MR"],
 " was first entered and this value was then changed to ",
 StyleBox["1", "MR"],
 " after ",
 StyleBox["rand4", "MR"],
 " was re-entered."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "While the lhs of a rewrite rule can only be associated with one value at a \
time, a value can be associated with several names, simultaneously. We made \
use of this earlier when we defined both ",
 StyleBox["b", "MR"],
 " and ",
 StyleBox["c", "MR"],
 " as ",
 StyleBox["{-1,1}", "MR"],
 "."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "Finally, user-defined rewrite rules can be removed from the global rule \
base using either the ",
 StyleBox["Clear", "MR"],
 " or ",
 StyleBox["Remove", "MR"],
 " function."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"Clear", "[", "b", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[69]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "b"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[70]:="],

Cell["Global`b", "Print",
 FontSize->14,
 CellTags->"Info3298628329-6260929"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Remove", "[", "c", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[71]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "c"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[72]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Information", "::", "\<\"notfound\"\>"}], ":", 
  " ", "\<\"Symbol \\!\\(\\\"c\\\"\\) not found. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::notfound\\\"]\\)\"\>"}]], "Message",
 FontSize->14,
 CellLabel->"From In[72]:="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Defining a function using the ",
 StyleBox["SetDelayed", "MB"],
 " (",
 StyleBox[":=", "MB"],
 ") function"
}], "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["Function definitions (ie., programs) are written as ", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"name", "[", 
   RowBox[{"arg1_", ",", "arg2_", ",", "\[Ellipsis]", ",", "argn_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{"expr1", ";", "expr2", ";", 
    RowBox[{"\[Ellipsis]", " ", "exprm"}]}], ")"}]}]], "DisplayMath",
 FontSize->14],

Cell["\<\
The lhs starts with a name. The name is followed by a set of square brackets \
containing a sequence of labelled patterns, which are symbols ending with one \
or more underscores (ie., blanks). The rhs is either an expression or a \
compound expression enclosed in parentheses, containing the labels on the lhs \
(without the blanks).\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["For example, consider the function definition", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Random", "[", 
   RowBox[{"Real", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "x"}], "}"}]}], "]"}]}]], "DisplayMath",
 FontSize->14],

Cell["We\[CloseCurlyQuote]ll enter this program", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "x"}], "}"}], "]"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[73]:="],

Cell[TextData[{
 "The first thing we notice is that, in contrast to a ",
 StyleBox["Set", "MR"],
 " function, nothing is returned when a ",
 StyleBox["SetDelayed", "MR"],
 " function is entered. If we query the rule base,"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[74]:="],

Cell["Global`f", "Print",
 FontSize->14,
 CellTags->"Info3298628329-4117228"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], ":=", 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "x"}], "}"}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["f"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628329-4117228"]
}, Open  ]],

Cell[TextData[{
 "we see that a rewrite rule associated with ",
 StyleBox["f", "MR"],
 " has been placed in the global rule base that is identical to the ",
 StyleBox["SetDelayed", "MR"],
 " function. The reason is that ",
 StyleBox["when a ",
  FontWeight->"Bold"],
 StyleBox["SetDelayed", "MB",
  FontWeight->"Bold"],
 StyleBox[" function is entered both its lhs and the rhs are left unevaluated",
  FontWeight->"Bold"],
 ". This property is known as the ",
 StyleBox["HoldAll", "MR"],
 " attribute."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "SetDelayed", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[75]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"HoldAll", ",", "Protected", ",", "SequenceHold"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[75]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "HoldAll"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[76]:="],

Cell[BoxData[
 RowBox[{"\<\"HoldAll is an attribute which specifies that all arguments to a \
function are to be maintained in an unevaluated form.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"HoldAll"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298628330-5402807"]
}, Open  ]],

Cell["\<\
A user-defined function is called in the same way as a built-in function is \
called, by entering its name with specific argument value(s).\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "8", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[77]:="],

Cell[BoxData["0.7912433608591618`"], "Output",
 FontSize->14,
 CellLabel->"Out[77]="]
}, Open  ]],

Cell["\<\
Each time the lhs of a SetDelayed rewrite rule is entered with specific \
argument values, the rhs of the rule is evaluated using these values, and the \
result is returned.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "8", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[78]:="],

Cell[BoxData["3.207959658813093`"], "Output",
 FontSize->14,
 CellLabel->"Out[78]="]
}, Open  ]],

Cell[TextData[{
 "Note: In contrast to the ",
 StyleBox[":=", "MR"],
 " function, the ",
 StyleBox["=", "MR"],
 " function only evaluates the rhs when it is first entered and thereafter, \
that same evaluated rhs is returned each time the lhs is entered with \
specific argument values. For example, consider"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", "x"}], ";"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[79]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[80]:="],

Cell["Global`f", "Print",
 FontSize->14,
 CellTags->"Info3298628330-4265513"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], "=", "x"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["f"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628330-4265513"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "9", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[81]:="],

Cell[BoxData["9"], "Output",
 FontSize->14,
 CellLabel->"Out[81]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "7", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[82]:="],

Cell[BoxData["7"], "Output",
 FontSize->14,
 CellLabel->"Out[82]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[83]:="],

Cell["Global`f", "Print",
 FontSize->14,
 CellTags->"Info3298628330-6113737"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], "=", "x"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["f"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628330-6113737"]
}, Open  ]],

Cell[TextData[{
 "The definition of ",
 StyleBox["f", "MR"],
 " above seems to work fine. However, the problem arises when the rhs of the ",
 StyleBox["Set", "MR"],
 " function has already had a value assigned to it prior to the entry of the ",
 StyleBox["Set", "MR"],
 " function."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "=", "7"}], ";"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[84]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "y_", "]"}], "=", "y"}], ";"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[85]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "g"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[86]:="],

Cell["Global`g", "Print",
 FontSize->14,
 CellTags->"Info3298628330-2192481"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"g", "[", "y_", "]"}], "=", "7"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["g"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628330-2192481"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "3", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[87]:="],

Cell[BoxData["7"], "Output",
 FontSize->14,
 CellLabel->"Out[87]="]
}, Open  ]],

Cell[TextData[{
 "This problem does not arise when the ",
 StyleBox["SetDelayed", "MR"],
 " function is used."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "=", "8"}], ";"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[88]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], ":=", "z"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[89]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "g"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[90]:="],

Cell["Global`g", "Print",
 FontSize->14,
 CellTags->"Info3298628330-9622315"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"g", "[", "z_", "]"}], ":=", "z"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["g"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628330-9622315"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "2", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[91]:="],

Cell[BoxData["2"], "Output",
 FontSize->14,
 CellLabel->"Out[91]="]
}, Open  ]],

Cell[TextData[{
 "This property of fresh evaluation of both the lhs and rhs of the ",
 StyleBox[":=", "MR"],
 " function with each use, is why the ",
 StyleBox[":=", "MR"],
 " function is used to write programs rather than the ",
 StyleBox["=", "MR"],
 " function."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "When the rhs of the ",
 StyleBox["SetDelayed", "MR"],
 " function is a compound expression enclosed in parentheses, no rewrite \
rules are created from the auxiliary functions on the rhs when the function \
is entered (this is because the rhs is not evaluated). When the program is \
run (or equivalently, a user-defined function is called) for the first time, \
all of the auxiliary functions are then placed in the global rule base."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"d", "=", "2"}], ";", 
    RowBox[{"x", "+", "d"}]}], ")"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[92]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "g"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[93]:="],

Cell["Global`g", "Print",
 FontSize->14,
 CellTags->"Info3298628330-6071061"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"g", "[", "x_", "]"}], ":=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", "=", "2"}], ";", 
           RowBox[{"x", "+", "d"}]}], ")"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["g"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628330-6071061"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "d"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[94]:="],

Cell["Global`d", "Print",
 FontSize->14,
 CellTags->"Info3298628330-8824378"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "3", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[95]:="],

Cell[BoxData["5"], "Output",
 FontSize->14,
 CellLabel->"Out[95]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "d"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[96]:="],

Cell["Global`d", "Print",
 FontSize->14,
 CellTags->"Info3298628331-5924008"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"d", "=", "2"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["d"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628331-5924008"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Placing constraints on a rewrite rule", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "The use of a rewrite rule can be restricted by attaching constraints on \
either the lhs or the rhs of a ",
 StyleBox["SetDelayed", "MR"],
 " rule. Conditional pattern-matching with ",
 StyleBox["_h", "MR"],
 " or with ",
 StyleBox["_?", "MR"],
 " and ",
 StyleBox["_/;", "MR"],
 " can be attached to the dummy variable arguments on the lhs. Also, ",
 StyleBox["/;", "MR"],
 " can be placed on the rhs, immediately after the (compound) expression."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{"x_", "?", "EvenQ"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{"Sqrt", "[", "x", "]"}], "]"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[97]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "[", "6", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[98]:="],

Cell[BoxData["2.449489742783178`"], "Output",
 FontSize->14,
 CellLabel->"Out[98]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "[", "5", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[99]:="],

Cell[BoxData[
 RowBox[{"s", "[", "5", "]"}]], "Output",
 FontSize->14,
 CellLabel->"Out[99]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Localizing names in a rewrite rule", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "As we have pointed out, when the lhs of a ",
 StyleBox["Set", "MR"],
 " or ",
 StyleBox["SetDelayed", "MR"],
 " function is evaluated (which occurs when a Set function is ",
 StyleBox["first entered",
  FontWeight->"Bold"],
 " and when a SetDelayed rewrite rule is ",
 StyleBox["first called",
  FontWeight->"Bold"],
 "), rewrite rules for all of its auxiliary functions are placed in the \
global rule base. This can cause a problem if a name being used in a program \
conflicts with the use of the name elsewhere."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
We can prevent a name clash by \[OpenCurlyQuote]insulating\[CloseCurlyQuote] \
the auxiliary functions within the rewrite rule so that they are not placed \
in the global rule base as separate rewrite rules; they will only \
\[OpenCurlyQuote]exist\[CloseCurlyQuote] while being used in the evaluation \
of the rule.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "This is usually done using the ",
 StyleBox["Module", "MR"],
 " function."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"lhs", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"name1", "=", "val1"}], ",", "name2", ",", "\[Ellipsis]"}], 
     "}"}], ",", "rhs"}], "]"}]}]], "DisplayMath",
 FontSize->14],

Cell["For example,", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"t", "[", "y_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{
     RowBox[{"m", "=", "2"}], ";", 
     RowBox[{"y", "+", "m"}]}]}], "]"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[100]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "m"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[101]:="],

Cell["Global`m", "Print",
 FontSize->14,
 CellTags->"Info3298628331-8580459"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", "[", "3", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[102]:="],

Cell[BoxData["5"], "Output",
 FontSize->14,
 CellLabel->"Out[102]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "m"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[103]:="],

Cell["Global`m", "Print",
 FontSize->14,
 CellTags->"Info3298628331-4790402"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ordering rewrite rules", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
When the lhs of more than one built-in and/or user-defined rewrite rule is \
found to pattern-match an expression (which occurs when the lhs\
\[CloseCurlyQuote]s only differ in their specificity), the choice of which \
rule to use is determined by the order of precedence:\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["A user-defined rule is used before a built-in rule.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
A more specific rule is used before a more general rule (a rule is more \
specific, the fewer expression it pattern-matches).\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
So, for example, if we have two rewrite rules whose lhs\[CloseCurlyQuote]s \
have the same name but whose labelled patterns have different specificity, \
both rules will appear in the global rule base (since their lhs\
\[CloseCurlyQuote]s are not identical) and the more specific rule will be \
used in preference to the more general rule. For example, if we enter both of \
the following function definitions\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_Integer", "]"}], ":=", 
  RowBox[{"x", "^", "3"}]}]}], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[104]:="],

Cell["and then query the rule base,", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[106]:="],

Cell["Global`f", "Print",
 FontSize->14,
 CellTags->"Info3298628331-9832253"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "[", "x_Integer", "]"}], ":=", 
         SuperscriptBox["x", "3"]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], ":=", 
         SuperscriptBox["x", "2"]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["f"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628331-9832253"]
}, Open  ]],

Cell[TextData[{
 "Now, entering ",
 StyleBox["f", "MR"],
 " with a real-valued argument"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "6.", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[107]:="],

Cell[BoxData["36.`"], "Output",
 FontSize->14,
 CellLabel->"Out[107]="]
}, Open  ]],

Cell[TextData[{
 "returns a different result from entering ",
 StyleBox["f", "MR"],
 " with an integer-valued argument."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "6", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[108]:="],

Cell[BoxData["216"], "Output",
 FontSize->14,
 CellLabel->"Out[108]="]
}, Open  ]],

Cell[TextData[{
 "This occurs because while an integer-valued argument pattern-matches both ",
 StyleBox["x_", "MR"],
 " and ",
 StyleBox["x_Integer", "MR"],
 " (and hence pattern-matches both of the ",
 StyleBox["f", "MR"],
 " rewrite rules), the second rule is a more specific pattern-match for the \
integer value 6."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
Note: If WL cannot deduce which rule is more general, it uses the rules in \
the order in which they appear in the global rule base.\
\>", "Text",
 CellChangeTimes->{3.583514480435293*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "The ordering of rewrite rules makes it possible for us to create sets of \
rewrite rules with the same name that give different results, depending on \
the arguments used. ",
 StyleBox["This is key to writing rule-based programs",
  FontWeight->"Bold"],
 "."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
Note: It is necessary to be careful about the labelling of patterns in \
rewrite rules because if two or more rules are identical except for the \
labelling, these rules will all be placed in the global rule base and it may \
not be obvious which rule will be used. For example,\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "4"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[109]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "[", "_", "]"}], ":=", 
  RowBox[{"RandomReal", "[", "]"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[110]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", "[", "2", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[111]:="],

Cell[BoxData["16"], "Output",
 FontSize->14,
 CellLabel->"Out[111]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "w"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[112]:="],

Cell["Global`w", "Print",
 FontSize->14,
 CellTags->"Info3298628331-7734930"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"w", "[", "x_", "]"}], ":=", 
         SuperscriptBox["x", "4"]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"w", "[", "_", "]"}], ":=", 
         RowBox[{"Random", "[", "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition["w"],
  Editable->False]], "Print",
 FontSize->14,
 CellTags->"Info3298628331-7734930"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transformation rules", "Section",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "There are times when we want a rewrite rule to only be applied to (ie., \
used inside) a specific expression, rather than being placed in the global \
rule base where it will be used whenever it pattern-matches an expression. \
For example, the \[OpenCurlyQuote]temporary\[CloseCurlyQuote] substitution of \
a value for a name in an expression may be preferable to the permanent \
assignment of the name to the value via a ",
 StyleBox["Set", "MR"],
 " function. When this is the case, the ",
 StyleBox["ReplaceAll", "MR"],
 " function can be used together with a ",
 StyleBox["Rule", "MR"],
 " or ",
 StyleBox["RuleDelayed", "MR"],
 " function to create a transformation (or local rewrite) rule which is \
placed directly after the expression to which it is to be applied."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[TextData[{
 "Using the ",
 StyleBox["Rule", "MB"],
 " (",
 StyleBox["->", "MB"],
 ") function"
}], "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "A ",
 StyleBox["Rule", "MR"],
 " function is attached to an expression. It is written"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"expression", "/.", 
  RowBox[{"lhs", "\[Rule]", "rhs"}]}]], "DisplayMath",
 FontSize->14],

Cell["\<\
The lhs can be written using symbols, numbers or labelled patterns.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "When an expression with an attached ",
 StyleBox["Rule", "MR"],
 " transformation rule is entered, the expression itself is evaluated first. \
Then, ",
 StyleBox["both",
  FontSlant->"Italic"],
 " the lhs and the rhs of the ",
 StyleBox["Rule", "MR"],
 " transformation rule are evaluated. Finally, the fully evaluated \
transformation rule is used in the evaluated expression. For example"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[113]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Rule]", "a"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[114]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "a", ",", "a"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[114]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Rule]", "a"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[115]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[115]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[116]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "b", ",", "b", ",", "b"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[116]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[117]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[117]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[118]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "a", ",", "a"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[118]="]
}, Open  ]],

Cell["We can attach a list of rules to an expression using ", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"expression", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"lhs1", "\[Rule]", "rhs1"}], ",", 
    RowBox[{"lhs2", "\[Rule]", "rhs2"}], ",", "\[Ellipsis]"}], 
   "}"}]}]], "DisplayMath",
 FontSize->14],

Cell["For example,", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "b"}], ",", 
    RowBox[{"b", "\[Rule]", "a"}]}], "}"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[119]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "b"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[119]="]
}, Open  ]],

Cell[TextData[{
 "Multiple transformation rules are used in parallel. The rules are applied \
in order so that a later rule in the list is used only if all the earlier \
rules do not match, and ",
 StyleBox["only one transformation rule at most, is applied to a given part \
of an expression",
  FontWeight->"Bold"],
 ", and no matching rules are used thereafter, as the above example \
illustrates."
}], "Text",
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Using the ",
 StyleBox["RuleDelayed", "MB"],
 " (",
 StyleBox[":>", "MB"],
 ") function"
}], "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "A ",
 StyleBox["RuleDelayed", "MR"],
 " function is attached to an expression. It is written"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"expression", "/.", 
  RowBox[{"lhs", "\[RuleDelayed]", "rhs"}]}]], "DisplayMath",
 FontSize->14],

Cell["or, for a list of rules", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"expression", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"lhs1", "\[RuleDelayed]", "rhs2"}], ",", 
    RowBox[{"lhs2", "\[RuleDelayed]", "rhs2"}], ",", "\[Ellipsis]"}], 
   "}"}]}]], "DisplayMath",
 FontSize->14],

Cell["\<\
The lhs can be written using symbols, numbers or labelled patterns.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "When an expression with an attached rule is entered, the expression itself \
is evaluated first. Then, the lhs of the ",
 StyleBox["RuleDelayed", "MR"],
 " transformation rule ",
 StyleBox["is",
  FontWeight->"Bold"],
 " evaluated but the rhs is ",
 StyleBox["not",
  FontWeight->"Bold"],
 " evaluated. Finally, the partially evaluated transformation rule is used in \
the evaluated expression (the unevaluated rhs will be evaluated subsequently)."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["For example,", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[RuleDelayed]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[120]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "b", ",", "b"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[120]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[RuleDelayed]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[121]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "a", ",", "b", ",", "a"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[121]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[RuleDelayed]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[LeftDoubleBracket]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[122]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[122]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Placing constraints on a transformation rule", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "By placing ",
 StyleBox["/; condition", "MR"],
 " immediately after a ",
 StyleBox["RuleDelayed", "MR"],
 " ",
 StyleBox[":>", "MR"],
 " transformation rule, its use can be restricted in the same way that using ",
 StyleBox["/; condition", "MR"],
 " can be used to restrict the use of a ",
 StyleBox["SetDelayed", "MR"],
 " rewrite rule."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "Note: Placing a ",
 StyleBox["/; condition", "MR"],
 " after a ",
 StyleBox["Rule", "MR"],
 " ",
 StyleBox["->", "MR"],
 " transformation rule serves no purpose since the rhs of the rule has \
already been evaluated before it is used and hence the conditional \
restriction is ignored."
}], "Text",
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applying a transformation rule repeatedly", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "To apply one or more transformation rules repeatedly to an expression until \
the expression no longer changes, the ",
 StyleBox["ReplaceRepeated", "MR"],
 " function is used. For example,"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "//.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "b"}], ",", 
    RowBox[{"b", "\[Rule]", "a"}]}], "}"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[123]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "a"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[123]="]
}, Open  ]],

Cell[TextData[{
 "Note: In using ",
 StyleBox["//.", "MR"],
 " with a list of transformation rules, it is important to keep in mind the \
order of application of the rules. The transformation rules are not \
repeatedly applied in order. Rather, each rule, in turn, is applied \
repeatedly."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[GridBox[{
   {
    StyleBox["rule", "Subsubsection",
     FontWeight->"Bold"], 
    StyleBox["evaluated", "Subsubsection",
     FontWeight->"Bold"], 
    StyleBox["unevaluated", "Subsubsection",
     FontWeight->"Bold"]},
   {
    RowBox[{"lhs", "=", "rhs"}], "rhs", "lhs"},
   {
    RowBox[{"lhs", ":=", "rhs"}], " ", 
    RowBox[{"lhs", ",", "rhs"}]},
   {
    RowBox[{"expr", "/.", 
     RowBox[{"lhs", "\[Rule]", "rhs"}]}], 
    RowBox[{"expr", ",", "lhs", ",", "rhs"}], " "},
   {
    RowBox[{"expr", "/.", 
     RowBox[{"lhs", "\[RuleDelayed]", "rhs"}]}], 
    RowBox[{"expr", ",", "lhs"}], "rhs"}
  }]], "DisplayMath",
 FontSize->14,
 GridBoxOptions->{
 GridBoxAlignment->{
  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, {True}, False}, "RowsIndexed" -> {}}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functional programming style", "Section",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
WL works with built-in and user-defined functions in ways which are \
characteristic of the \[OpenCurlyQuote]functional\[CloseCurlyQuote] style of \
programming.\
\>", "Text",
 CellChangeTimes->{3.583514520372698*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell["Nested function calls", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["Consider the following consecutive computations:", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tan", "[", "4.0", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[124]:="],

Cell[BoxData["1.1578212823495775`"], "Output",
 FontSize->14,
 CellLabel->"Out[124]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "%", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[125]:="],

Cell[BoxData["0.9159308854343666`"], "Output",
 FontSize->14,
 CellLabel->"Out[125]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", "%", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[126]:="],

Cell[BoxData["0.6090525263647699`"], "Output",
 FontSize->14,
 CellLabel->"Out[126]="]
}, Open  ]],

Cell[TextData[{
 "We can combine these function calls into a ",
 StyleBox["nested function call",
  FontSlant->"Italic"],
 "."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{"Sin", "[", 
   RowBox[{"Tan", "[", "4.0", "]"}], "]"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[127]:="],

Cell[BoxData["0.6090525263647699`"], "Output",
 FontSize->14,
 CellLabel->"Out[127]="]
}, Open  ]],

Cell["\<\
Notice that the result of one function call is immediately fed into another \
function without having to first name (or declare) the result.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
A nested function call is the application of a function to the result of \
applying another function to some argument value. In applying functions \
successively, it is not necessary to declare the value of the result of one \
function call prior to using it as an argument in another function call.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
We can illustrate the use of nested function calls using a deck of playing \
cards:\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"2", ",", "10"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[128]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
   ",", "10"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[128]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[ScriptCapitalJ]", ",", "\[ScriptCapitalQ]", ",", "\[ScriptCapitalK]", 
     ",", "\[ScriptCapitalA]"}], "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[129]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
   ",", "10", ",", "\[ScriptCapitalJ]", ",", "\[ScriptCapitalQ]", ",", 
   "\[ScriptCapitalK]", ",", "\[ScriptCapitalA]"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[129]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Outer", "[", 
  RowBox[{"List", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[ClubSuit]", ",", "\[DiamondSuit]", ",", "\[HeartSuit]", ",", 
     "\[SpadeSuit]"}], "}"}], ",", "%"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[130]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[130]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"%", ",", "1"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[131]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], 
  "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[131]="]
}, Open  ]],

Cell["\<\
Combining these operations, we can define cardDeck by combining the \
operations above.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cardDeck", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{"List", ",", 
      RowBox[{"{", 
       RowBox[{
       "\[ClubSuit]", ",", "\[DiamondSuit]", ",", "\[HeartSuit]", ",", 
        "\[SpadeSuit]"}], "}"}], ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"2", ",", "10"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[ScriptCapitalJ]", ",", "\[ScriptCapitalQ]", ",", 
          "\[ScriptCapitalK]", ",", "\[ScriptCapitalA]"}], "}"}]}], "]"}]}], 
     "]"}], ",", "1"}], "]"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[132]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalA]"}], "}"}]}], 
  "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[132]="]
}, Open  ]],

Cell["Shuffling a deck of cards", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Sort", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", "52"}], "]"}], ",", 
       "cardDeck"}], "}"}], "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[133]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalJ]"}], "}"}]}], 
  "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[133]="]
}, Open  ]],

Cell["\<\
Note: We can also shuffle a deck of cards using a transformation rule.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sort", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", "52"}], "]"}], ",", 
      "cardDeck"}], "}"}], "]"}], "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"_", ",", "y_"}], "}"}], "\[RuleDelayed]", "y"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[134]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalA]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DiamondSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalJ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "\[ScriptCapitalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "\[ScriptCapitalK]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SpadeSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[HeartSuit]", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ClubSuit]", ",", "9"}], "}"}]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[134]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Anonymous functions", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "User-defined ",
 StyleBox["anonymous functions",
  FontSlant->"Italic"],
 " can be created and used \[OpenCurlyQuote]on the spot\[CloseCurlyQuote] \
without being named or entered prior to being used."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "An anonymous function is written using the same form as the rhs of a \
rewrite rule, replacing variable symbols with ",
 StyleBox["#1", "MR"],
 ", ",
 StyleBox["#2", "MR"],
 ", \[Ellipsis] and enclosing the expression in parentheses followed by an \
ampersand (",
 StyleBox["&", "MR"],
 ")."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
This notation can be demonstrated by converting some simple user-defined \
functions into anonymous functions. For example, a rewrite rule that squared \
a value\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"square", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "2"}]}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[135]:="],

Cell["\<\
can be written as an anonymous function and applied to an argument, eg., 5, \
instantly.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", "^", "2"}], ")"}], "&"}], "[", "5", "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[136]:="],

Cell[BoxData["25"], "Output",
 FontSize->14,
 CellLabel->"Out[136]="]
}, Open  ]],

Cell["\<\
An example of an anonymous function with two arguments, raises the first \
argument to the power of the second argument.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#1", "^", "#2"}], ")"}], "&"}], "[", 
  RowBox[{"5", ",", "3"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[137]:="],

Cell[BoxData["125"], "Output",
 FontSize->14,
 CellLabel->"Out[137]="]
}, Open  ]],

Cell["\<\
It is important to distinguish between an anonymous function which takes \
multiple arguments and an anonymous function which takes a list with multiple \
elements as its argument.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
For example, the anonymous function just given doesn\[CloseCurlyQuote]t work \
with an ordered pair argument.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#1", "^", "#2"}], ")"}], "&"}], "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[138]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "::", "\<\"slotn\"\>"}], ":", 
  " ", "\<\"Slot number \\!\\(2\\) in \\!\\(#1\\^#2 &\\) cannot be filled \
from \\!\\(\\(\\((\\(#1\\^#2 &\\))\\)\\)[\\(\\({2, 3}\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Function::slotn\\\"]\\)\"\>"}]], \
"Message",
 FontSize->14,
 CellLabel->"From In[138]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["2", "#2"], ",", 
   SuperscriptBox["3", "#2"]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[138]="]
}, Open  ]],

Cell["\<\
If we want to perform the operation on the components of an ordered pair, the \
appropriate anonymous function is\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "^", 
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[139]:="],

Cell[BoxData["8"], "Output",
 FontSize->14,
 CellLabel->"Out[139]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nesting anonymous functions", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
Anonymous functions can be nested, in which case it is sometimes necessary to \
use the form\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", "body"}], "]"}]], "DisplayMath",
 FontSize->14],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "\[Ellipsis]"}], "}"}], ",", "body"}], 
  "]"}]], "DisplayMath",
 FontSize->14],

Cell[TextData[{
 "rather than the ",
 StyleBox["#\[CenterDot]&", "MR"],
 " form, in order to distinguish between the arguments of the different \
anonymous functions."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", "^", "3"}], ")"}], "&"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "+", "2"}], ")"}], "&"}], "[", "3", "]"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[140]:="],

Cell[BoxData["125"], "Output",
 FontSize->14,
 CellLabel->"Out[140]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{"y", ",", 
    RowBox[{"y", "^", "3"}]}], "]"}], "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "+", "2"}]}], "]"}], "[", "3", "]"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[141]:="],

Cell[BoxData["125"], "Output",
 FontSize->14,
 CellLabel->"Out[141]="]
}, Open  ]],

Cell["The two forms can also be used together.", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{"y", ",", 
    RowBox[{"y", "^", "3"}]}], "]"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "+", "2"}], ")"}], "&"}], "[", "3", "]"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[142]:="],

Cell[BoxData["125"], "Output",
 FontSize->14,
 CellLabel->"Out[142]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", "^", "3"}], ")"}], "&"}], "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "+", "2"}]}], "]"}], "[", "3", "]"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[143]:="],

Cell[BoxData["125"], "Output",
 FontSize->14,
 CellLabel->"Out[143]="]
}, Open  ]],

Cell["\<\
Anonymous functions are useful for making predicates and arguments for \
higher-order functions.\
\>", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "Note: An anonymous predicate function ",
 StyleBox["must",
  FontWeight->"Bold"],
 " be written using the ",
 StyleBox["#\[CenterDot]&", "MR"],
 " form."
}], "Text",
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell["Higher-order functions", "SubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "A ",
 StyleBox["higher-order function",
  FontSlant->"Italic"],
 " takes a function as an argument and/or returns a function as a result. \
This is known as \[OpenCurlyQuote]treating functions as first-class objects\
\[CloseCurlyQuote]. We\[CloseCurlyQuote]ll illustrate the use of some of the \
most important built-in higher order functions."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Apply", "MB"]], "SubsubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Apply"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[144]:="],

Cell[BoxData[
 RowBox[{"\<\"Apply[f, expr] or f @@ expr replaces the head of expr by f. \
Apply[f, expr, levelspec] replaces heads in parts of expr specified by \
levelspec.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"Apply"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298702877-6373140"]
}, Open  ]],

Cell[TextData[{
 "We have already seen ",
 StyleBox["Apply", "MR"],
 " used to add the elements of a linear list. Given a nested list argument, ",
 StyleBox["Apply", "MR"],
 " can be used on the outer list or the interior lists. For example, for a \
general function, ",
 StyleBox["f", "MR"],
 ", and a nested list."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[145]:="],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d"}], "}"}]}], "]"}]], "Output",
 FontSize->14,
 CellLabel->"Out[145]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}], ",", "2"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[146]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"c", ",", "d"}], "]"}]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[146]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Map", "MB"]], "SubsubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Map"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[147]:="],

Cell[BoxData[
 RowBox[{"\<\"Map[f, expr] or f /@ expr applies f to each element on the \
first level in expr. Map[f, expr, levelspec] applies f to parts of expr \
specified by levelspec.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"Map"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298702878-1917793"]
}, Open  ]],

Cell[TextData[{
 "For a general function, ",
 StyleBox["f", "MR"],
 ", and a linear list."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[148]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", "b", "]"}], ",", 
   RowBox[{"f", "[", "c", "]"}], ",", 
   RowBox[{"f", "[", "d", "]"}]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[148]="]
}, Open  ]],

Cell[TextData[{
 "For a nested list structure, ",
 StyleBox["Map", "MR"],
 " can be applied to either the outer list or to the interior lists, or to \
both. For example, for a general function ",
 StyleBox["g", "MR"],
 ":"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[149]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}], "]"}]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[149]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[150]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "[", "a", "]"}], ",", 
     RowBox[{"g", "[", "b", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "[", "c", "]"}], ",", 
     RowBox[{"g", "[", "d", "]"}]}], "}"}]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[150]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["MapThread", "MB"]], "SubsubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MapThread"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[151]:="],

Cell[BoxData[
 RowBox[{"\<\"MapThread[f, {{a1, a2, ... }, {b1, b2, ... }, ... }] gives \
{f[a1, b1, ... ], f[a2, b2, ... ], ... }. MapThread[f, {expr1, expr2, ... }, \
n] applies f to the parts of the expri at level n.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"MapThread"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298702878-1633021"]
}, Open  ]],

Cell[TextData[{
 "For a general function, ",
 StyleBox["g", "MR"],
 ", and a nested list."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[152]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"a", ",", "x"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"b", ",", "y"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"c", ",", "z"}], "]"}]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[152]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"List", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[153]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "z"}], "}"}]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[153]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"Plus", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[154]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "+", "x"}], ",", 
   RowBox[{"b", "+", "y"}], ",", 
   RowBox[{"c", "+", "z"}]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[154]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["NestList", "MB"],
 " and ",
 StyleBox["Nest", "MB"]
}], "SubsubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 StyleBox["Nest", "MR"],
 " performs a nested function call, applying the same function repeatedly."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[TextData[{
 "The ",
 StyleBox["Nest", "MR"],
 " operation applies a function to a value, then applies the function to the \
result, and then applies the function to that result and then applies\
\[Ellipsis] and so on a specified number of times."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NestList"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[155]:="],

Cell[BoxData[
 RowBox[{"\<\"NestList[f, expr, n] gives a list of the results of applying f \
to expr 0 through n times.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"NestList"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298702878-2340354"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7", ",", 
   RowBox[{"Sin", "[", "0.7", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"Sin", "[", "0.7", "]"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"Sin", "[", 
     RowBox[{"Sin", "[", "0.7", "]"}], "]"}], "]"}]}], "}"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[156]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7`", ",", "0.644217687237691`", ",", "0.6005731086610715`", ",", 
   "0.5651153876289311`"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[156]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"Sin", ",", "0.7", ",", "3"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[157]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7`", ",", "0.644217687237691`", ",", "0.6005731086610715`", ",", 
   "0.5651153876289311`"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[157]="]
}, Open  ]],

Cell[TextData[{
 "If we are only interested in the final result of the ",
 StyleBox["NestList", "MR"],
 " operation, we can use the ",
 StyleBox["Nest", "MR"],
 " function which does not return the intermediate results."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Nest"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[158]:="],

Cell[BoxData[
 RowBox[{"\<\"Nest[f, expr, n] gives an expression with f applied n times to \
expr.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"Nest"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298702878-6666238"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{"Sin", ",", "0.7", ",", "3"}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[159]:="],

Cell[BoxData["0.5651153876289311`"], "Output",
 FontSize->14,
 CellLabel->"Out[159]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["FixedPointList", "MB"],
 " and ",
 StyleBox["FixedPoint", "MB"]
}], "SubsubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "The ",
 StyleBox["Nest", "MR"],
 " operation does not stop until it has completed a specified number of \
function applications. There is another function which performs the ",
 StyleBox["Nest", "MR"],
 " operation, stopping after whichever of the following occurs first: (a) \
there have been a specified number of function applications, (b) the result \
stops changing, or (c) some predicate condition is met."
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FixedPointList"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[160]:="],

Cell[BoxData[
 RowBox[{"\<\"FixedPointList[f, expr] generates a list giving the results of \
applying f repeatedly, starting with expr, until the results no longer \
change.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"FixedPointList"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298702879-1735401"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FixedPoint"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[161]:="],

Cell[BoxData[
 RowBox[{"\<\"FixedPoint[f, expr] starts with expr, then applies f repeatedly \
until the result no longer changes.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"FixedPoint"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298702879-2180365"]
}, Open  ]],

Cell["As an example,", "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixedPointList", "[", 
  RowBox[{"Sin", ",", "0.7", ",", "5", ",", 
   RowBox[{"SameTest", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#2", "<", "0.65"}], "&"}], ")"}]}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[162]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7`", ",", "0.644217687237691`"}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[162]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixedPointList", "[", 
  RowBox[{"Sin", ",", "0.7", ",", "5", ",", 
   RowBox[{"SameTest", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#1", "-", "#2"}], ")"}], "<", "0.045"}], "&"}], ")"}]}]}], 
  "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[163]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7`", ",", "0.644217687237691`", ",", "0.6005731086610715`"}], 
  "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[163]="]
}, Open  ]],

Cell[TextData[{
 "Note: In these examples, ",
 StyleBox["#1", "MR"],
 " refers to the next-to-last element in the list being generated and ",
 StyleBox["#2", "MR"],
 " refers to the last element in the list."
}], "Text",
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["FoldList", "MB"],
 " and ",
 StyleBox["Fold", "MB"]
}], "SubsubsectionIcon",
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FoldList"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[164]:="],

Cell[BoxData[
 RowBox[{"\<\"FoldList[f, x, {a, b, ... }] gives {x, f[x, a], f[f[x, a], b], \
... }.\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"FoldList"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298702879-1409416"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Fold"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[165]:="],

Cell[BoxData[
 RowBox[{"\<\"Fold[f, x, list] gives the last element of FoldList[f, x, \
list].\"\>", " ", 
  ButtonBox[
   StyleBox["More\[Ellipsis]", "SR"],
   Active->True,
   BaseStyle->"RefGuideLink",
   ButtonData:>"Fold"]}]], "Print",
 FontSize->14,
 CellTags->"Info3298702879-8183178"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["Fold", "MR"],
 " operation takes a function, a value and a list, applies the function to \
the value, and then applies the function to the result and the first element \
of the list, and then applies the function to the result and the second \
element of the list and so on. For example,"
}], "Text",
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{"Plus", ",", "0", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[166]:="],

Cell[BoxData[
 RowBox[{"a", "+", "b", "+", "c", "+", "d"}]], "Output",
 FontSize->14,
 CellLabel->"Out[166]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{"Plus", ",", "0", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[167]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "a", ",", 
   RowBox[{"a", "+", "b"}], ",", 
   RowBox[{"a", "+", "b", "+", "c"}], ",", 
   RowBox[{"a", "+", "b", "+", "c", "+", "d"}]}], "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[167]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{"Plus", ",", "0", ",", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "5"}], "]"}]}], "]"}]], "Input",
 FontSize->14,
 FontWeight->"Plain",
 CellLabel->"In[168]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2"}], 
  "}"}]], "Output",
 FontSize->14,
 CellLabel->"Out[168]="]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples of WL Programs ", "Section",
 CellChangeTimes->{
  3.593004361237628*^9, {3.5930044069894447`*^9, 3.5930044229856033`*^9}, {
   3.593080436045002*^9, 3.593080448058872*^9}, {3.593080480715946*^9, 
   3.593080485144903*^9}, {3.5931601258453608`*^9, 3.5931601265135317`*^9}, {
   3.5946271398527517`*^9, 3.5946271641904287`*^9}, {3.594627303037993*^9, 
   3.5946273262561827`*^9}, {3.594627540115177*^9, 3.594627540713091*^9}, {
   3.5946275710872507`*^9, 3.594627576095964*^9}},
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "The Game of Life (GoL) is undoubtably, the most famous cellular automaton \
(CA) and watching the GoL program run offers deep insight into fundamental \
tenets concerning the modeling of natural phenomena.",
 StyleBox[" ",
  FontFamily->"ArialMT",
  FontColor->RGBColor[0., 0., 0.]],
 "The GoL was created in 1969 by the mathematician John Conway and was \
published in Martin Gardner\[CloseCurlyQuote]s Scientific American column \
(see http://www.maa.org/sites/default/files/pdf/pubs/focus/Gardner_\
GameofLife10-1970.pdf). The GoL can be described as follows:"
}], "Text",
 CellChangeTimes->{{3.5839197861461287`*^9, 3.58391978672232*^9}, {
   3.5929006328843927`*^9, 3.592900792508523*^9}, 3.592915801311129*^9, {
   3.592915866799477*^9, 3.592915884696843*^9}, 3.5929273904070387`*^9, {
   3.5929376180593233`*^9, 3.592937713611916*^9}, 3.593004283243411*^9, {
   3.593082688421229*^9, 3.593082770678403*^9}, {3.593082936642099*^9, 
   3.593082987435966*^9}, {3.593083273595868*^9, 3.5930834099802713`*^9}, {
   3.593083503248187*^9, 3.593083550390872*^9}, {3.593083637531147*^9, 
   3.5930836391868153`*^9}, {3.593083979724278*^9, 3.593084031744502*^9}, {
   3.593084062605529*^9, 3.593084072664751*^9}, {3.5930865541535883`*^9, 
   3.593086592957543*^9}, {3.593086629049327*^9, 3.5930866361248083`*^9}, {
   3.593161523678331*^9, 3.5931615550732517`*^9}, {3.5946278301369343`*^9, 
   3.5946278517447853`*^9}, {3.594628055302923*^9, 3.594628224158161*^9}, {
   3.594664787600877*^9, 3.594664849172236*^9}, {3.594708765088235*^9, 
   3.594708853753599*^9}, {3.594708894493927*^9, 3.594708961713604*^9}, {
   3.594709042555409*^9, 3.59470908243819*^9}, {3.594713383394498*^9, 
   3.594713385183483*^9}, {3.594713430142362*^9, 3.594713432398213*^9}, {
   3.594713473271957*^9, 3.594713551903245*^9}, {3.594714039318221*^9, 
   3.594714138744768*^9}, {3.594714183975623*^9, 3.594714193151417*^9}, 
   3.594714251892426*^9, {3.594714309859215*^9, 3.594714344546905*^9}, {
   3.594714450769052*^9, 3.5947144736103287`*^9}, {3.594714641814039*^9, 
   3.594714654315857*^9}, {3.594714694779044*^9, 3.594714704469241*^9}, {
   3.5947150181814947`*^9, 3.594715056171082*^9}, {3.594715442345374*^9, 
   3.59471554153207*^9}, {3.594715577507358*^9, 3.594715578728684*^9}, {
   3.594716554479106*^9, 3.594716562915885*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
On an \[OpenCurlyQuote]n by n\[CloseCurlyQuote] two-dimensional square grid \
(aka \[OpenCurlyQuote]checkerboard\[CloseCurlyQuote]), each of the n^2 cells \
(aka \[OpenCurlyQuote]sites\[CloseCurlyQuote]) can have two possible values, \
0 (aka a \[OpenCurlyQuote]dead\[CloseCurlyQuote] cell) or 1 (aka a \
\[OpenCurlyQuote]live\[CloseCurlyQuote] cell). On each time step, the values \
of all of the cells are updated simultaneously, based on the value of a cell \
and the sum of the values of the cells adjacent to (i.e. touching) the cell \
being updated. The neighborhood\[CloseCurlyQuote] of a cell is comprised of \
the 8 nearest-neighbor (nn) cells, lying north, northeast, east, southeast, \
south, southwest, west, and northwest of the cell (these nn cells comprise \
what is known as the Moore neighborhood). The rules governing the updating \
are as follows:
(1) if a cell is alive and has exactly two living nn cell, the cell remains \
alive (if its value is 1, it remains 1).
(2) if a cell has exactly three living nn sites, the cell remains alive (if \
its value is 1, it remains 1) or
    is \[OpenCurlyQuote]born\[CloseCurlyQuote]and becomes alive (if its value \
is 0, it changes to 1).
(3) any other cell either remains dead (if its value is 0, it remains 0) or \
\[OpenCurlyQuote]dies\[CloseCurlyQuote] and becomes dead (if its value is 1, \
it changes to 0). \
\>", "Text",
 CellChangeTimes->{{3.592832733354199*^9, 3.592833079547461*^9}, {
   3.5928331388387136`*^9, 3.592833271083305*^9}, {3.592833306281707*^9, 
   3.592833371352126*^9}, {3.5928334445775843`*^9, 3.592833729866879*^9}, {
   3.592833865021173*^9, 3.592833902453424*^9}, {3.592834087716146*^9, 
   3.592834227752385*^9}, {3.592834300706991*^9, 3.592834352630232*^9}, {
   3.5928376785189037`*^9, 3.592837824945373*^9}, 3.592927390408266*^9, {
   3.593004438354672*^9, 3.593004524379828*^9}, {3.593004566059208*^9, 
   3.593004696543633*^9}, {3.593004735543646*^9, 3.5930048888004436`*^9}, {
   3.5930840904943438`*^9, 3.593084137991358*^9}, {3.593084173109105*^9, 
   3.593084231467559*^9}, {3.593084288031577*^9, 3.5930844084433403`*^9}, {
   3.593085586861732*^9, 3.593085611684175*^9}, {3.593085642004807*^9, 
   3.5930856427036552`*^9}, {3.593085689161571*^9, 3.593085801045697*^9}, {
   3.5931602087247477`*^9, 3.5931602091566267`*^9}, {3.593160248040469*^9, 
   3.593160275330768*^9}, {3.5931603058488398`*^9, 3.593160308514429*^9}, {
   3.594628260565424*^9, 3.5946283061660748`*^9}, {3.59471357520229*^9, 
   3.5947136153448277`*^9}, {3.5947147109030733`*^9, 3.594714731927382*^9}, {
   3.594714827001604*^9, 3.594714962963194*^9}, {3.5947156694069633`*^9, 
   3.594715739241893*^9}, {3.594715783494891*^9, 3.5947157929870157`*^9}, {
   3.594715833000944*^9, 3.5947159165230827`*^9}, {3.5947159891424913`*^9, 
   3.5947159929017*^9}, 3.594716624866795*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
note: T.H. Huxley\[CloseCurlyQuote]s statement that \
\[OpenCurlyDoubleQuote]The chess-board is the world; the pieces are the \
phenomena of the universe; the rules of the game are what we call the laws of \
Nature\[CloseCurlyDoubleQuote] is often used in conjunction with cellular \
automata; however, this is an incorrect, or at least imprecise, analogy \
because in a CA, it is the values of the cells themselves that we are \
conerned with.  \
\>", "Text",
 CellChangeTimes->{{3.5839197861461287`*^9, 3.58391978672232*^9}, {
   3.5929006328843927`*^9, 3.592900792508523*^9}, 3.592915801311129*^9, {
   3.592915866799477*^9, 3.592915884696843*^9}, 3.5929273904070387`*^9, {
   3.5929376180593233`*^9, 3.592937713611916*^9}, 3.593004283243411*^9, {
   3.593082688421229*^9, 3.593082770678403*^9}, {3.593082936642099*^9, 
   3.593082987435966*^9}, {3.593083273595868*^9, 3.5930834099802713`*^9}, {
   3.593083503248187*^9, 3.593083550390872*^9}, {3.593083637531147*^9, 
   3.5930836391868153`*^9}, {3.593083979724278*^9, 3.593084031744502*^9}, {
   3.593084062605529*^9, 3.593084072664751*^9}, {3.5930865541535883`*^9, 
   3.593086592957543*^9}, {3.593086629049327*^9, 3.5930866361248083`*^9}, {
   3.593161523678331*^9, 3.5931615550732517`*^9}, {3.5946278301369343`*^9, 
   3.5946278517447853`*^9}, {3.594628055302923*^9, 3.594628224158161*^9}, {
   3.594664787600877*^9, 3.594664849172236*^9}, {3.594708765088235*^9, 
   3.594708853753599*^9}, {3.594708894493927*^9, 3.594708961713604*^9}, {
   3.594709042555409*^9, 3.59470908243819*^9}, {3.594713383394498*^9, 
   3.594713385183483*^9}, {3.594713430142362*^9, 3.594713432398213*^9}, {
   3.594713473271957*^9, 3.594713551903245*^9}, {3.594714039318221*^9, 
   3.594714138744768*^9}, {3.594714183975623*^9, 3.594714193151417*^9}, 
   3.594714251892426*^9, {3.594714309859215*^9, 3.594714344546905*^9}, {
   3.594714450769052*^9, 3.5947144736103287`*^9}, {3.594714641814039*^9, 
   3.594714654315857*^9}, {3.594714694779044*^9, 3.594714704469241*^9}, {
   3.5947150181814947`*^9, 3.594715172103539*^9}, {3.594715224719522*^9, 
   3.594715367622705*^9}, {3.594716651624167*^9, 3.594716700507968*^9}, {
   3.594716733740808*^9, 3.594716784111264*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell[CellGroupData[{

Cell["\<\
Creating Four WL Programs for \[OpenCurlyQuote]The Game of Life\
\[CloseCurlyQuote]\
\>", "SubsectionIcon",
 CellChangeTimes->{
  3.593004361237628*^9, {3.5930044069894447`*^9, 3.5930044229856033`*^9}, {
   3.593080436045002*^9, 3.593080448058872*^9}, {3.593080480715946*^9, 
   3.593080485144903*^9}, {3.5931601258453608`*^9, 3.5931601265135317`*^9}, 
   3.5946275677891903`*^9, {3.594628231455304*^9, 3.594628238094173*^9}, {
   3.594716842395503*^9, 3.5947168799490232`*^9}},
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "The ",
 StyleBox["LifeGame",
  FontColor->RGBColor[1, 0, 1]],
 " program is basically a straightforward implementation of GoL employing the \
rule-making, array-processing and pattern-matching capabilities of WL."
}], "Text",
 CellChangeTimes->{{3.592916324389196*^9, 3.592916465860799*^9}, {
   3.592920213801086*^9, 3.592920275294703*^9}, 3.5929273904102287`*^9, {
   3.5929274996164*^9, 3.59292776354187*^9}, {3.592927801630146*^9, 
   3.592927804654133*^9}, {3.593005340623889*^9, 3.5930053959630337`*^9}, {
   3.5930054805685596`*^9, 3.593005490056114*^9}, {3.5930865346754637`*^9, 
   3.593086539390524*^9}, {3.593087807943323*^9, 3.593087816080563*^9}, {
   3.593087861381205*^9, 3.593087876037385*^9}, {3.593088873991043*^9, 
   3.59308888246996*^9}, 3.593148393014999*^9, {3.5945825660741577`*^9, 
   3.5945825720313873`*^9}, {3.594665067803092*^9, 3.594665068579603*^9}, {
   3.594716935585227*^9, 3.5947169732943373`*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["LifeGame",
    FontColor->RGBColor[1, 0, 1]], "[", 
   RowBox[{"n_", ",", " ", 
    StyleBox[
     RowBox[{
      StyleBox["steps",
       FontSlant->"Plain"], "_"}]]}], "]"}], " ", ":=", "\[IndentingNewLine]",
   "   ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"gameboard", ",", " ", "liveNeighbors", ",", " ", "update"}], 
     "}"}], ",", "\[IndentingNewLine]", "       ", 
    RowBox[{
     RowBox[{"gameboard", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Random", "[", "Integer", "]"}], ",", 
        RowBox[{"{", "n", "}"}], ",", 
        RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "       ", 
     RowBox[{
      RowBox[{"liveNeighbors", "[", "mat_", "]"}], " ", ":=", " ", 
      RowBox[{"Apply", "[", 
       RowBox[{"Plus", ",", "  ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotateRight", "[", 
            RowBox[{"mat", ",", " ", "#"}], "]"}], "&"}], ",", 
          "\[IndentingNewLine]", "  ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "1"}], "}"}]}], "}"}]}], "]"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", "       ", 
     RowBox[{
      RowBox[{"update", "[", 
       RowBox[{"1", ",", " ", "2"}], "]"}], " ", ":=", "1"}], ";", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{
      RowBox[{"update", "[", 
       RowBox[{"_", ",", " ", "3"}], "]"}], " ", ":=", "1"}], ";", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{
      RowBox[{"update", "[", 
       RowBox[{"_", ",", " ", "_"}], "]"}], " ", ":=", "0"}], ";", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"update", ",", " ", "Listable"}], "]"}], ";", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"update", "[", 
         RowBox[{"#", ",", 
          RowBox[{"liveNeighbors", "[", "#", "]"}]}], "]"}], "&"}], ",", 
       "gameboard", ",", "steps"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.592755441527939*^9, 3.592755786377408*^9}, 
   3.592756022646226*^9, {3.592756499544012*^9, 3.59275650597158*^9}, 
   3.5927567046802673`*^9, 3.592927390409719*^9, {3.592951210825197*^9, 
   3.5929512125479393`*^9}, {3.5929591583676643`*^9, 3.592959174150341*^9}, {
   3.592959342416761*^9, 3.592959370424464*^9}, {3.593005014746395*^9, 
   3.593005053450954*^9}, {3.593072570200335*^9, 3.593072578873446*^9}, 
   3.593072619264956*^9, {3.594554314137157*^9, 3.59455435290683*^9}, {
   3.5945584603976727`*^9, 3.594558461963468*^9}, {3.594705817580407*^9, 
   3.594705828859666*^9}},
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "The ",
 StyleBox["bowlOfCherries ",
  FontColor->RGBColor[1, 0, 0]],
 "program is a \[OpenCurlyQuote]one-liner\[CloseCurlyQuote], employing a \
nested anonymous (aka pure) function which uses the shorthand notation (...)& \
and is comprised of three other anonymous functions which are written using \
Function with one formal parameter (Function[x, ...], Function[y, ...] and \
Function[z, ...]).\nThe behaviors of the three anonymous functions nested \
within the outermost anonymous function, do can be readily discerned by \
referring to the LifeGame program:\nValues of the sum of each cell\
\[CloseCurlyQuote]s eight nn cells (0 thru 8) are calculated by adding \
together the results of eight rotations of the gameboard matrix (the values \
of the sums are the same as the values determined using liveNeighbors in \
LifeGame). \nOrdered pairs are created, in each of which the first element is \
the value of a cell (0 or 1) and the second element is the sum of the values \
(0 thru 8) of the cell\[CloseCurlyQuote]s eight nn cells (the two elements in \
each ordered pair are the same as the two arguments used in the update rules \
of LifeGame). \nTransformation rules are applied to each of the ordered pairs \
(the rules are analagous to the update rules of LifeGame)."
}], "Text",
 CellChangeTimes->{{3.59292004268255*^9, 3.592920046246204*^9}, {
   3.592927372565711*^9, 3.59292739041472*^9}, 3.593009007720735*^9, {
   3.593088056875661*^9, 3.593088097370967*^9}, {3.593088270479659*^9, 
   3.593088318867684*^9}, {3.593088353208302*^9, 3.593088402894381*^9}, {
   3.593088856131646*^9, 3.593088860411003*^9}, {3.5930889448209352`*^9, 
   3.5930889469636517`*^9}, {3.593088997505341*^9, 3.593088997957757*^9}, {
   3.593089207235773*^9, 3.5930892564720707`*^9}, {3.593148330575244*^9, 
   3.5931483448851833`*^9}, {3.593161091890315*^9, 3.5931611015915833`*^9}, {
   3.593161134959901*^9, 3.593161159179542*^9}, {3.59456925838939*^9, 
   3.594569278413159*^9}, 3.594578803810585*^9, {3.594582618833275*^9, 
   3.594582667820704*^9}, 3.594665120004274*^9, {3.594665163626412*^9, 
   3.594665169874164*^9}, {3.5946655764442577`*^9, 3.594665599884701*^9}, {
   3.5947170638339767`*^9, 3.594717066283167*^9}, {3.5947171104578743`*^9, 
   3.594717262447095*^9}, {3.594717294513381*^9, 3.5947173250985613`*^9}, {
   3.594717358886799*^9, 3.59471736936375*^9}, {3.5947174115544643`*^9, 
   3.5947175199977207`*^9}, {3.594717554721911*^9, 3.5947175987509403`*^9}, 
   3.594717724625963*^9, {3.594717763044793*^9, 3.594717771911365*^9}, {
   3.594717838371085*^9, 3.5947178731174393`*^9}, 3.5947179697928343`*^9, {
   3.594721221707967*^9, 3.594721406002266*^9}, {3.59472676683037*^9, 
   3.59472681281763*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["bowlOfCherries",
    FontColor->RGBColor[1, 0, 0]], "[", 
   RowBox[{"n_", ",", " ", 
    StyleBox[
     RowBox[{
      StyleBox["steps",
       FontSlant->"Plain"], "_"}]]}], "]"}], " ", ":=", " ", 
  RowBox[{"Nest", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", " ", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"x", ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"y", ",", " ", 
                 RowBox[{"Apply", "[", 
                  RowBox[{"Plus", ",", "  ", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"z", ",", " ", 
                    RowBox[{"RotateRight", "[", 
                    RowBox[{"y", ",", " ", "z"}], "]"}]}], "]"}], ",", " ", 
                    "\[IndentingNewLine]", "  ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", " ", 
                    RowBox[{"-", "1"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", 
                    RowBox[{"-", "1"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"-", "1"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "1"}], "}"}]}], "}"}]}], "]"}]}], 
                  "]"}]}], "]"}], "[", "x", "]"}]}], "}"}]}], "]"}], "[", "#",
           "]"}], ",", " ", "2"}], "]"}], " ", "/.", "     ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "2"}], "}"}], " ", "->", " ", "1"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", " ", "3"}], "}"}], " ", "->", " ", "1"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", " ", "_"}], "}"}], " ", "->", " ", "0"}]}], 
        "}"}]}], ")"}], "&"}], ",", " ", "\[IndentingNewLine]", 
    "                                                                ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", "Integer", "]"}], ",", 
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{"{", "n", "}"}]}], "]"}], ",", " ", 
    StyleBox["steps",
     FontSlant->"Plain"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.592951263043418*^9, 3.592951272637694*^9}, {
   3.592951306198867*^9, 3.5929513180615807`*^9}, {3.5929560446265*^9, 
   3.592956053236343*^9}, {3.592959513316743*^9, 3.5929595138615713`*^9}, 
   3.5930727040469017`*^9, {3.593079688379113*^9, 3.593079689436348*^9}, 
   3.5931485595272503`*^9, {3.5932574629857492`*^9, 3.5932575084717293`*^9}, 
   3.594542628643057*^9, {3.594556652431108*^9, 3.5945566820542316`*^9}, {
   3.594556747378702*^9, 3.594556814775807*^9}, {3.594556903075933*^9, 
   3.594556906471389*^9}, {3.594558498968499*^9, 3.5945585004190903`*^9}, {
   3.594664967977511*^9, 3.5946649914540787`*^9}, 3.5947058468576937`*^9, 
   3.594705907343314*^9},
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "The ",
 StyleBox["OblaDeOblaDa",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 " program creates and then employs a lookup table comprised of 512 update \
rules, one for each of the 2^9 possible configurations of a cell and its \
eight nearest-neighbor cells."
}], "Text",
 CellChangeTimes->{{3.594578842256369*^9, 3.594578980765502*^9}, {
   3.5945800942816896`*^9, 3.594580388903104*^9}, 3.594582248995722*^9, {
   3.5945827622066717`*^9, 3.59458276735982*^9}, {3.594582797905201*^9, 
   3.594582815557782*^9}, 3.5946651985687723`*^9, 3.594665994429242*^9, {
   3.594718009098118*^9, 3.5947180218776503`*^9}, {3.594718053155446*^9, 
   3.5947180650475893`*^9}, {3.594726848905203*^9, 3.594726849725297*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["OblaDeOblaDa",
    FontColor->RGBColor[0.6, 0.4, 0.2]], "[", 
   RowBox[{"n_", ",", " ", 
    StyleBox[
     RowBox[{
      StyleBox["steps",
       FontSlant->"Plain"], "_"}]]}], "]"}], ":=", "  ", "\n", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gameboard", ",", " ", "Moore", ",", " ", "update", ",", " ", 
      "LiveConfigs", ",", " ", "DieConfigs"}], "}"}], ",", "\n", "     ", 
    RowBox[{
     RowBox[{"gameboard", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Random", "[", "Integer", "]"}], ",", 
        RowBox[{"{", "n", "}"}], ",", 
        RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LiveConfigs", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "0", "}"}], ",", " ", "#"}], "]"}], "&"}], ",", " ", 
          RowBox[{"Permutations", "[", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", " ", "1", ",", " ", "1", ",", " ", "0", ",", " ", "0", 
             ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], "]"}]}], 
         "]"}], ",", " ", "\n", "                                    ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "1", "}"}], ",", " ", "#"}], "]"}], "&"}], ",", " ", 
          RowBox[{"Permutations", "[", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", " ", "1", ",", " ", "1", ",", " ", "0", ",", " ", "0", 
             ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], "]"}]}], 
         "]"}], ",", " ", "\n", "                                    ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "1", "}"}], ",", " ", "#"}], "]"}], "&"}], ",", " ", 
          RowBox[{"Permutations", "[", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", " ", "1", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
             ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], "]"}]}], 
         "]"}]}], " ", "]"}]}], ";", "\n", "    ", 
     RowBox[{"DieConfigs", " ", "=", " ", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"Permutations", ",", " ", "\n", "                 ", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{"1", ",", " ", 
                   RowBox[{"{", "#", "}"}]}], "]"}], ",", " ", 
                 RowBox[{"Table", "[", 
                  RowBox[{"0", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"(", 
                    RowBox[{"9", " ", "-", " ", "#"}], ")"}], "}"}]}], 
                  "]"}]}], " ", "]"}], "&"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "9"}], "]"}]}], "]"}]}], "]"}], ",", 
          " ", "1"}], "]"}], ",", " ", "LiveConfigs"}], "]"}]}], ";", " ", 
     "\n", "    ", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"update", "[", "##", "]"}], " ", "=", " ", "1"}], ")"}], 
        "&"}], ",", " ", "LiveConfigs", ",", " ", "1"}], "]"}], ";", "  ", 
     "\n", "    ", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"update", "[", "##", "]"}], " ", "=", " ", "0"}], ")"}], 
        "&"}], ",", " ", "DieConfigs", ",", " ", "1"}], "]"}], ";", " ", "\n",
      "    ", 
     RowBox[{
      RowBox[{"Moore", "[", 
       RowBox[{"func__", ",", " ", "lat_"}], "]"}], " ", ":=", "   ", "\n", 
      "        ", 
      RowBox[{"MapThread", "[", 
       RowBox[{"func", ",", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotateRight", "[", 
            RowBox[{"lat", ",", " ", "#"}], "]"}], "&"}], ",", " ", "\n", 
          "            ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "  ", 
              RowBox[{"-", "1"}]}], "}"}], ",", "     ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "1"}], "}"}]}], "}"}]}], "]"}], ",", " ", 
        "2"}], "]"}]}], ";", "\n", "   ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Moore", "[", 
         RowBox[{"update", ",", " ", "#"}], "]"}], "&"}], ",", " ", 
       "gameboard", ",", 
       StyleBox["steps",
        FontSlant->"Plain"]}], "]"}]}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.594554028616446*^9, 3.5945540286213703`*^9}, {
   3.594554084143937*^9, 3.594554131709326*^9}, {3.594554228989585*^9, 
   3.594554281268448*^9}, 3.594554527589962*^9, {3.594554574135808*^9, 
   3.594554579828629*^9}, {3.594556864388598*^9, 3.5945568832912827`*^9}, {
   3.594558472192288*^9, 3.594558489312415*^9}, {3.594559031122241*^9, 
   3.59455904698002*^9}, 3.594705850619596*^9, 3.59470591381536*^9, {
   3.5947070126175423`*^9, 3.594707021804599*^9}, {3.594707411953126*^9, 
   3.594707436572772*^9}},
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "note: The ",
 StyleBox["LifeGame",
  FontColor->RGBColor[1, 0, 1]],
 " and ",
 StyleBox["bowlOfCherries",
  FontColor->RGBColor[1, 0, 0]],
 " programs run about equally fast while the ",
 StyleBox["OblaDeOblaDa",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 " program runs about twice as fast (because of its use of more specific \
patterns consisting of 0\[CloseCurlyQuote]s and 1\[CloseCurlyQuote]s rather \
than more general patterns consisting of blanks). An impressively faster GoL \
program in WL can be run by simply using WL\[CloseCurlyQuote]s built-in \
CellularAutomaton function."
}], "Text",
 CellChangeTimes->{{3.594578842256369*^9, 3.594578980765502*^9}, {
   3.5945800942816896`*^9, 3.594580388903104*^9}, 3.594582248995722*^9, {
   3.5945827622066717`*^9, 3.59458276735982*^9}, {3.594582797905201*^9, 
   3.594582815557782*^9}, 3.5946651985687723`*^9, 3.594665994429242*^9, {
   3.594718009098118*^9, 3.5947180218776503`*^9}, {3.594718053155446*^9, 
   3.5947180650475893`*^9}, {3.594718308869568*^9, 3.594718448388423*^9}, {
   3.5947185560027847`*^9, 3.594718579902981*^9}, {3.594718639985222*^9, 
   3.5947189741924973`*^9}, {3.5947190049313707`*^9, 3.594719108322246*^9}, {
   3.594719173528324*^9, 3.594719229566142*^9}, {3.594719278791183*^9, 
   3.5947192814129763`*^9}, {3.594720884165678*^9, 3.59472094070789*^9}, {
   3.59472147265831*^9, 3.594721487738699*^9}, {3.594726874484776*^9, 
   3.5947268763003263`*^9}, {3.596352852606368*^9, 3.5963528629877977`*^9}, {
   3.596353039695963*^9, 3.596353040303916*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["WLLife",
    FontColor->RGBColor[0.5, 0, 0.5]], "[", 
   RowBox[{"n_", ",", " ", 
    StyleBox[
     StyleBox[
      RowBox[{
       StyleBox["steps",
        FontSlant->"Plain"], "_"}]],
     FontColor->RGBColor[0, 0, 1]]}], "]"}], " ", ":=", 
  RowBox[{"CellularAutomaton", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"224", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", "Integer", "]"}], ",", 
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{"{", "n", "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       StyleBox["steps",
        FontSlant->"Plain"], "}"}], "}"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5945574525097933`*^9, 3.594557452514682*^9}, 
   3.59455749855803*^9, {3.59455792206483*^9, 3.594557962467525*^9}, {
   3.594558055579303*^9, 3.5945580743188887`*^9}, 3.594558106189736*^9, {
   3.5945581913018303`*^9, 3.594558241680768*^9}, 3.5947058687752447`*^9, 
   3.594705921828732*^9},
 FontSize->14,
 FontWeight->"Plain"],

Cell["\<\
note: Unfortuntely, it is not clear (to me) what each of the arguments being \
used in the one-liner CellularAutomaton version of GoL represents, what \
algorithm(s)is being used in CellularAutomaton, or if the algorithm is \
implemented in WL rather than in another programming language such as C \
(which occurs with some other built-In WL functions). It would be interesting \
to compare the speed of running the GoL in WLLife with the speed of running \
the GoL in the blazingly fast \[OpenCurlyQuote]Golly\[CloseCurlyQuote] app \
(see http://golly.sourceforge.net and also \
http://www.drdobbs.com/jvm/an-algorithm-for-compressing-space-and-t/184406478)\
.\
\>", "Text",
 CellChangeTimes->{{3.594578842256369*^9, 3.594578980765502*^9}, {
   3.5945800942816896`*^9, 3.594580388903104*^9}, 3.594582248995722*^9, {
   3.5945827622066717`*^9, 3.59458276735982*^9}, {3.594582797905201*^9, 
   3.594582815557782*^9}, 3.5946651985687723`*^9, 3.594665994429242*^9, {
   3.594718009098118*^9, 3.5947180218776503`*^9}, {3.594718053155446*^9, 
   3.5947180650475893`*^9}, {3.594718308869568*^9, 3.594718448388423*^9}, {
   3.5947185560027847`*^9, 3.594718579902981*^9}, {3.594718639985222*^9, 
   3.5947189741924973`*^9}, {3.5947190049313707`*^9, 3.594719108322246*^9}, {
   3.594719173528324*^9, 3.594719229566142*^9}, {3.594719292073498*^9, 
   3.5947194934797707`*^9}, {3.594719527218195*^9, 3.5947195543088017`*^9}, {
   3.5947197092374496`*^9, 3.594719725979117*^9}, {3.594720153301605*^9, 
   3.594720333155053*^9}, {3.594720370560763*^9, 3.5947204768881493`*^9}, {
   3.594720534554983*^9, 3.5947205692901707`*^9}, {3.594720620570985*^9, 
   3.594720663073173*^9}, {3.594720723108819*^9, 3.594720776445202*^9}, {
   3.594720807960485*^9, 3.594720873667658*^9}, {3.594720959205873*^9, 
   3.5947209752911158`*^9}, {3.5947210074618464`*^9, 3.594721056915359*^9}, {
   3.594721518164125*^9, 3.5947216081939087`*^9}, {3.5947216561973*^9, 
   3.594721658699642*^9}, {3.5947274585308847`*^9, 3.5947275017856293`*^9}, {
   3.596352639318349*^9, 3.59635279925393*^9}},
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]],

Cell[CellGroupData[{

Cell["end notes on GoL: ", "SubsectionIcon",
 CellChangeTimes->{{3.5929908087355013`*^9, 3.5929908131936398`*^9}, {
   3.592990900900844*^9, 3.59299098723682*^9}, {3.5929910265506144`*^9, 
   3.5929911671410093`*^9}, {3.592992573832179*^9, 3.592992612032967*^9}, {
   3.593094093856452*^9, 3.5930940998460493`*^9}, {3.593094178964245*^9, 
   3.5930942444090137`*^9}, {3.593094920777274*^9, 3.593094981693488*^9}, {
   3.593095063633442*^9, 3.59309506600522*^9}, {3.593095600891583*^9, 
   3.593095624200231*^9}, 3.59309700663616*^9, 3.5930994370219593`*^9, {
   3.593151168021166*^9, 3.5931511706858387`*^9}, {3.593151207837358*^9, 
   3.593151640566144*^9}, {3.593161270600831*^9, 3.5931613560643682`*^9}, {
   3.593161404261489*^9, 3.593161431218151*^9}, {3.593162409947176*^9, 
   3.5931624231853647`*^9}, {3.593257393533543*^9, 3.593257397209385*^9}, {
   3.5945810119757423`*^9, 3.594581326159971*^9}, {3.594581400825383*^9, 
   3.594581471346148*^9}, 3.594581731126725*^9, {3.5945817749126453`*^9, 
   3.594581801419931*^9}, {3.594581858335133*^9, 3.594581859441855*^9}, {
   3.59458528383687*^9, 3.5945853730400143`*^9}, 3.594585441566947*^9, {
   3.594587684746522*^9, 3.59458791946815*^9}, {3.594587963007662*^9, 
   3.594588001089641*^9}, {3.5945881326344147`*^9, 3.5945881359513893`*^9}, {
   3.5946660161578617`*^9, 3.5946660174064617`*^9}, {3.594707694090784*^9, 
   3.5947077208494787`*^9}, {3.594707766148741*^9, 3.5947077978197613`*^9}, {
   3.5947210820651093`*^9, 3.594721083011587*^9}, {3.594721731737404*^9, 
   3.594721736395492*^9}},
 FontFamily->"Courier",
 FontSize->14,
 FontWeight->"Plain"],

Cell[TextData[{
 "The use of the built-in Compile function might speed up some of the GoL \
programs, e.g. ",
 StyleBox["bowlOfCherries",
  FontColor->RGBColor[1, 0, 0]],
 ", but I share the view expressed by the creator of WL (see \
http://www.stephenwolfram.com/media/stephen-wolfram-strong-opinions/) that \
computer programs do not need [or should not need] to be Compiled or \
Parallelized. This is a task best left to the people who design and implement \
the programming language so that the user of the language, e.g. the \
scientist, can focus on the task of model development (which is difficult \
enough to do) without having any unnecessary additional burden when \
implementing it in a program (this is illustrated for the case of the forest \
fire CA in http://www.cs.berkeley.edu/~fateman/papers/cashort.pdf). "
}], "Text",
 CellChangeTimes->{{3.5929908087355013`*^9, 3.5929908131936398`*^9}, {
   3.592990900900844*^9, 3.59299098723682*^9}, {3.5929910265506144`*^9, 
   3.5929911671410093`*^9}, {3.592992573832179*^9, 3.592992612032967*^9}, {
   3.593094093856452*^9, 3.5930940998460493`*^9}, {3.593094178964245*^9, 
   3.5930942444090137`*^9}, {3.593094920777274*^9, 3.593094981693488*^9}, {
   3.593095063633442*^9, 3.59309506600522*^9}, {3.593095600891583*^9, 
   3.593095624200231*^9}, 3.59309700663616*^9, 3.5930994370219593`*^9, {
   3.593151168021166*^9, 3.5931511706858387`*^9}, {3.593151207837358*^9, 
   3.593151640566144*^9}, {3.593161270600831*^9, 3.5931613560643682`*^9}, {
   3.593161404261489*^9, 3.593161431218151*^9}, {3.593162409947176*^9, 
   3.5931624231853647`*^9}, {3.593257393533543*^9, 3.593257397209385*^9}, {
   3.5945810119757423`*^9, 3.594581326159971*^9}, {3.594581400825383*^9, 
   3.594581471346148*^9}, 3.594581731126725*^9, {3.5945817749126453`*^9, 
   3.594581801419931*^9}, {3.594581858335133*^9, 3.594581859441855*^9}, {
   3.59458528383687*^9, 3.5945853730400143`*^9}, 3.594585441566947*^9, {
   3.594587684746522*^9, 3.59458791946815*^9}, {3.594587963007662*^9, 
   3.594588001089641*^9}, {3.5945881326344147`*^9, 3.5945881359513893`*^9}, {
   3.5946660161578617`*^9, 3.5946660174064617`*^9}, {3.594707694090784*^9, 
   3.5947077208494787`*^9}, {3.594707766148741*^9, 3.594707774849835*^9}, 
   3.594720651739872*^9, 3.594721089707204*^9, {3.594721676224285*^9, 
   3.594721716807946*^9}, {3.594721776762869*^9, 3.594721884957768*^9}, 
   3.594722007871089*^9, 3.594722044584159*^9, {3.594724404148921*^9, 
   3.594724423075304*^9}, {3.5947263872075367`*^9, 3.594726432048995*^9}, {
   3.595836695199993*^9, 3.595836703807282*^9}, {3.59583673679744*^9, 
   3.59583675578249*^9}, 3.59583679951807*^9},
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
GoL programs written in other programming languages can be found at \
http://rosettacode.org/wiki/Conway\[CloseCurlyQuote]s_Game_of_Life.\
\>", "Text",
 CellChangeTimes->{{3.5929908087355013`*^9, 3.5929908131936398`*^9}, {
   3.592990900900844*^9, 3.59299098723682*^9}, {3.5929910265506144`*^9, 
   3.5929911671410093`*^9}, {3.592992573832179*^9, 3.592992612032967*^9}, {
   3.593094093856452*^9, 3.5930940998460493`*^9}, {3.593094178964245*^9, 
   3.5930942444090137`*^9}, {3.593094920777274*^9, 3.593094981693488*^9}, {
   3.593095063633442*^9, 3.59309506600522*^9}, {3.593095600891583*^9, 
   3.593095624200231*^9}, 3.59309700663616*^9, 3.5930994370219593`*^9, {
   3.593151168021166*^9, 3.5931511706858387`*^9}, {3.593151207837358*^9, 
   3.593151640566144*^9}, {3.593161270600831*^9, 3.5931613560643682`*^9}, {
   3.593161404261489*^9, 3.593161431218151*^9}, {3.593162409947176*^9, 
   3.5931624231853647`*^9}, {3.593257393533543*^9, 3.593257397209385*^9}, {
   3.5945810119757423`*^9, 3.594581326159971*^9}, {3.594581400825383*^9, 
   3.594581471346148*^9}, 3.594581731126725*^9, {3.5945817749126453`*^9, 
   3.594581801419931*^9}, {3.594581858335133*^9, 3.594581859441855*^9}, {
   3.59458528383687*^9, 3.5945853730400143`*^9}, 3.594585441566947*^9, {
   3.594587684746522*^9, 3.59458791946815*^9}, {3.594587963007662*^9, 
   3.594588001089641*^9}, {3.5945881326344147`*^9, 3.5945881359513893`*^9}, {
   3.5946660161578617`*^9, 3.5946660174064617`*^9}, {3.594707694090784*^9, 
   3.5947077208494787`*^9}, {3.594707766148741*^9, 3.594707774849835*^9}, 
   3.594720651739872*^9, 3.594721089707204*^9, {3.594721676224285*^9, 
   3.594721716807946*^9}, {3.594722010988394*^9, 3.594722120597324*^9}, {
   3.594722174370988*^9, 3.594722529753867*^9}, {3.5947226209306498`*^9, 
   3.594722773791039*^9}, {3.594722923470932*^9, 3.594723045199912*^9}, {
   3.594723185360973*^9, 3.5947234815859528`*^9}, {3.594723740883431*^9, 
   3.5947239640451612`*^9}, {3.594724002523615*^9, 3.594724127937766*^9}, {
   3.5947241945994596`*^9, 3.5947242021775303`*^9}, {3.59472443046493*^9, 
   3.594724440014311*^9}, {3.594724524238098*^9, 3.594724527084176*^9}, {
   3.594724930623905*^9, 3.594724970518659*^9}, {3.5947250017122583`*^9, 
   3.594725015031138*^9}, {3.594725092481423*^9, 3.594725241314106*^9}, {
   3.594725514572608*^9, 3.594725531350493*^9}, {3.594725600623336*^9, 
   3.594725611479129*^9}, {3.594725742240047*^9, 3.59472581791123*^9}, {
   3.5947259263984127`*^9, 3.594725990092453*^9}, {3.5947264721747932`*^9, 
   3.594726546739291*^9}, 3.594727165434895*^9, 3.594727262030817*^9, 
   3.594727294906432*^9, {3.594727394624736*^9, 3.5947274429959383`*^9}, {
   3.595836632498691*^9, 3.595836633323907*^9}},
 FontFamily->"Courier",
 FontSize->14],

Cell["\<\
Finally, as an philosophical aside, the GoL is directly relevant to \
fundamental issues in the natural sciences, such as emergent phenomena, \
theoretical modeling of behavior in natural systems, and even, the nature of \
reality. For those individuals interested in this, see the book: \
\[OpenCurlyDoubleQuote]The Grand Design\[CloseCurlyDoubleQuote] by Stephen \
Hawking and Leonard Mlodinow (the relevant section in this book can also be \
found at http://aminotes.tumblr.com/post/27848853009/s-hawking-l-mlodinow-on-\
why-is-there-something), and the two articles by Israeli and Goldenfeld: \
\[OpenCurlyDoubleQuote]Computational Irreducibility and the predictability of \
complex physical systems\[CloseCurlyDoubleQuote] in Physical Review Letters, \
92(7), 074105 (2004) (accessible at http://arxiv.org/pdf/nlin/0309047.pdf) \
and \[OpenCurlyDoubleQuote]Coarse-graining of cellular automata, emergence, \
and the predictability of complex systems\[CloseCurlyDoubleQuote] in Physical \
Review E, 73, 026203 (2006) (accessible at \
http://arxiv.org/pdf/nlin/0508033.pdf).\
\>", "Text",
 CellChangeTimes->{{3.5929908087355013`*^9, 3.5929908131936398`*^9}, {
   3.592990900900844*^9, 3.59299098723682*^9}, {3.5929910265506144`*^9, 
   3.5929911671410093`*^9}, {3.592992573832179*^9, 3.592992612032967*^9}, {
   3.593094093856452*^9, 3.5930940998460493`*^9}, {3.593094178964245*^9, 
   3.5930942444090137`*^9}, {3.593094920777274*^9, 3.593094981693488*^9}, {
   3.593095063633442*^9, 3.59309506600522*^9}, {3.593095600891583*^9, 
   3.593095624200231*^9}, 3.59309700663616*^9, 3.5930994370219593`*^9, {
   3.593151168021166*^9, 3.5931511706858387`*^9}, {3.593151207837358*^9, 
   3.593151640566144*^9}, {3.593161270600831*^9, 3.5931613560643682`*^9}, {
   3.593161404261489*^9, 3.593161431218151*^9}, {3.593162409947176*^9, 
   3.5931624231853647`*^9}, {3.593257393533543*^9, 3.593257397209385*^9}, {
   3.5945810119757423`*^9, 3.594581326159971*^9}, {3.594581400825383*^9, 
   3.594581471346148*^9}, 3.594581731126725*^9, {3.5945817749126453`*^9, 
   3.594581801419931*^9}, {3.594581858335133*^9, 3.594581859441855*^9}, {
   3.594585484560073*^9, 3.594585611673135*^9}, {3.594588030841021*^9, 
   3.594588129104855*^9}, {3.594726029446477*^9, 3.5947260310887947`*^9}, {
   3.594726139626422*^9, 3.5947263655275908`*^9}, {3.5947265895306253`*^9, 
   3.594726591054804*^9}, {3.596353241631654*^9, 3.5963532508797007`*^9}, 
   3.596353294593029*^9, 3.596353328332259*^9},
 FontFamily->"Courier",
 FontSize->14]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Brackets",
WindowSize->{1366, 661},
WindowMargins->{{8, Automatic}, {Automatic, 18}},
PrintingCopies->1,
PrintingStartingPageNumber->1,
PrintingPageRange->{1, Automatic},
PageHeaders->{{
   Cell[
    TextData[
     CounterBox["Page", CounterFunction :> Identity]], "Header", 
    CellMargins -> {{0, Inherited}, {Inherited, Inherited}}], None, 
   Cell[
    TextData[
     ValueBox["FileName"]], "Header", 
    CellMargins -> {{Inherited, 0}, {Inherited, Inherited}}]}, {
   Cell[
    TextData[
     ValueBox["FileName"]], "Header", 
    CellMargins -> {{0, Inherited}, {Inherited, Inherited}}], None, 
   Cell[
    TextData[
     StyleBox[
      CounterBox["Page"], "PageNumber"]], "Header", 
    CellMargins -> {{Inherited, 0}, {Inherited, Inherited}}]}},
PageFooters->{{None, None, None}, {None, None, None}},
PageHeaderLines->{False, True},
PageFooterLines->{False, False},
PrintingOptions->{"FacingPages"->True,
"FirstPageFace"->Right,
"FirstPageFooter"->False,
"FirstPageHeader"->False},
ShowSelection->True,
DefaultNewCellStyle->"Text",
Magnification->1,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"HelpBrowser.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3298628325-7411773"->{
  Cell[9317, 293, 372, 10, 23, "Print",
   CellTags->"Info3298628325-7411773"]},
 "Info3298628328-4448021"->{
  Cell[56055, 2269, 81, 2, 21, "Print",
   CellTags->"Info3298628328-4448021"],
  Cell[56139, 2273, 712, 21, 20, "Print",
   CellTags->"Info3298628328-4448021"]},
 "Info3298628328-7397595"->{
  Cell[55034, 2230, 77, 2, 21, "Print",
   CellTags->"Info3298628328-7397595"],
  Cell[55114, 2234, 792, 24, 20, "Print",
   CellTags->"Info3298628328-7397595"]},
 "Info3298628328-8025855"->{
  Cell[61707, 2504, 81, 2, 21, "Print",
   CellTags->"Info3298628328-8025855"],
  Cell[61791, 2508, 754, 22, 20, "Print",
   CellTags->"Info3298628328-8025855"]},
 "Info3298628328-8384155"->{
  Cell[58216, 2348, 356, 9, 23, "Print",
   CellTags->"Info3298628328-8384155"]},
 "Info3298628329-3913320"->{
  Cell[64405, 2601, 81, 2, 21, "Print",
   CellTags->"Info3298628329-3913320"],
  Cell[64489, 2605, 800, 24, 20, "Print",
   CellTags->"Info3298628329-3913320"]},
 "Info3298628329-4117228"->{
  Cell[76168, 3063, 77, 2, 21, "Print",
   CellTags->"Info3298628329-4117228"],
  Cell[76248, 3067, 880, 26, 23, "Print",
   CellTags->"Info3298628329-4117228"]},
 "Info3298628329-6260929"->{
  Cell[73384, 2952, 77, 2, 21, "Print",
   CellTags->"Info3298628329-6260929"]},
 "Info3298628329-8766420"->{
  Cell[66734, 2691, 77, 2, 21, "Print",
   CellTags->"Info3298628329-8766420"],
  Cell[66814, 2695, 792, 24, 20, "Print",
   CellTags->"Info3298628329-8766420"]},
 "Info3298628329-8889146"->{
  Cell[67751, 2730, 77, 2, 21, "Print",
   CellTags->"Info3298628329-8889146"],
  Cell[67831, 2734, 792, 24, 20, "Print",
   CellTags->"Info3298628329-8889146"]},
 "Info3298628329-9228028"->{
  Cell[70196, 2823, 81, 2, 21, "Print",
   CellTags->"Info3298628329-9228028"],
  Cell[70280, 2827, 712, 21, 20, "Print",
   CellTags->"Info3298628329-9228028"]},
 "Info3298628329-9296844"->{
  Cell[65434, 2640, 77, 2, 21, "Print",
   CellTags->"Info3298628329-9296844"],
  Cell[65514, 2644, 792, 24, 20, "Print",
   CellTags->"Info3298628329-9296844"]},
 "Info3298628329-9544687"->{
  Cell[71368, 2869, 81, 2, 21, "Print",
   CellTags->"Info3298628329-9544687"],
  Cell[71452, 2873, 712, 21, 20, "Print",
   CellTags->"Info3298628329-9544687"]},
 "Info3298628330-2192481"->{
  Cell[83097, 3346, 77, 2, 21, "Print",
   CellTags->"Info3298628330-2192481"],
  Cell[83177, 3350, 740, 22, 23, "Print",
   CellTags->"Info3298628330-2192481"]},
 "Info3298628330-4265513"->{
  Cell[80095, 3219, 77, 2, 21, "Print",
   CellTags->"Info3298628330-4265513"],
  Cell[80175, 3223, 740, 22, 23, "Print",
   CellTags->"Info3298628330-4265513"]},
 "Info3298628330-5402807"->{
  Cell[78155, 3138, 348, 9, 23, "Print",
   CellTags->"Info3298628330-5402807"]},
 "Info3298628330-6071061"->{
  Cell[86976, 3503, 77, 2, 21, "Print",
   CellTags->"Info3298628330-6071061"],
  Cell[87056, 3507, 866, 26, 23, "Print",
   CellTags->"Info3298628330-6071061"]},
 "Info3298628330-6113737"->{
  Cell[81504, 3282, 77, 2, 21, "Print",
   CellTags->"Info3298628330-6113737"],
  Cell[81584, 3286, 740, 22, 23, "Print",
   CellTags->"Info3298628330-6113737"]},
 "Info3298628330-8824378"->{
  Cell[88067, 3544, 77, 2, 21, "Print",
   CellTags->"Info3298628330-8824378"]},
 "Info3298628330-9622315"->{
  Cell[84722, 3418, 77, 2, 21, "Print",
   CellTags->"Info3298628330-9622315"],
  Cell[84802, 3422, 741, 22, 23, "Print",
   CellTags->"Info3298628330-9622315"]},
 "Info3298628331-4790402"->{
  Cell[93184, 3765, 77, 2, 21, "Print",
   CellTags->"Info3298628331-4790402"]},
 "Info3298628331-5924008"->{
  Cell[88511, 3570, 77, 2, 21, "Print",
   CellTags->"Info3298628331-5924008"],
  Cell[88591, 3574, 704, 21, 20, "Print",
   CellTags->"Info3298628331-5924008"]},
 "Info3298628331-7734930"->{
  Cell[98787, 3987, 77, 2, 21, "Print",
   CellTags->"Info3298628331-7734930"],
  Cell[98867, 3991, 900, 28, 62, "Print",
   CellTags->"Info3298628331-7734930"]},
 "Info3298628331-8580459"->{
  Cell[92737, 3739, 77, 2, 21, "Print",
   CellTags->"Info3298628331-8580459"]},
 "Info3298628331-9832253"->{
  Cell[95032, 3832, 77, 2, 21, "Print",
   CellTags->"Info3298628331-9832253"],
  Cell[95112, 3836, 904, 28, 66, "Print",
   CellTags->"Info3298628331-9832253"]},
 "Info3298702877-6373140"->{
  Cell[147801, 5730, 372, 10, 23, "Print",
   CellTags->"Info3298702877-6373140"]},
 "Info3298702878-1633021"->{
  Cell[152902, 5953, 421, 10, 42, "Print",
   CellTags->"Info3298702878-1633021"]},
 "Info3298702878-1917793"->{
  Cell[149970, 5824, 383, 10, 42, "Print",
   CellTags->"Info3298702878-1917793"]},
 "Info3298702878-2340354"->{
  Cell[156138, 6092, 321, 9, 23, "Print",
   CellTags->"Info3298702878-2340354"]},
 "Info3298702878-6666238"->{
  Cell[157866, 6164, 296, 9, 23, "Print",
   CellTags->"Info3298702878-6666238"]},
 "Info3298702879-1409416"->{
  Cell[161876, 6334, 301, 9, 23, "Print",
   CellTags->"Info3298702879-1409416"]},
 "Info3298702879-1735401"->{
  Cell[159300, 6223, 381, 10, 23, "Print",
   CellTags->"Info3298702879-1735401"]},
 "Info3298702879-2180365"->{
  Cell[159836, 6244, 333, 9, 23, "Print",
   CellTags->"Info3298702879-2180365"]},
 "Info3298702879-8183178"->{
  Cell[162326, 6354, 292, 9, 23, "Print",
   CellTags->"Info3298702879-8183178"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3298628325-7411773", 207496, 7330},
 {"Info3298628328-4448021", 207606, 7333},
 {"Info3298628328-7397595", 207798, 7338},
 {"Info3298628328-8025855", 207990, 7343},
 {"Info3298628328-8384155", 208182, 7348},
 {"Info3298628329-3913320", 208293, 7351},
 {"Info3298628329-4117228", 208485, 7356},
 {"Info3298628329-6260929", 208677, 7361},
 {"Info3298628329-8766420", 208787, 7364},
 {"Info3298628329-8889146", 208979, 7369},
 {"Info3298628329-9228028", 209171, 7374},
 {"Info3298628329-9296844", 209363, 7379},
 {"Info3298628329-9544687", 209555, 7384},
 {"Info3298628330-2192481", 209747, 7389},
 {"Info3298628330-4265513", 209939, 7394},
 {"Info3298628330-5402807", 210131, 7399},
 {"Info3298628330-6071061", 210242, 7402},
 {"Info3298628330-6113737", 210434, 7407},
 {"Info3298628330-8824378", 210626, 7412},
 {"Info3298628330-9622315", 210736, 7415},
 {"Info3298628331-4790402", 210928, 7420},
 {"Info3298628331-5924008", 211038, 7423},
 {"Info3298628331-7734930", 211230, 7428},
 {"Info3298628331-8580459", 211422, 7433},
 {"Info3298628331-9832253", 211532, 7436},
 {"Info3298702877-6373140", 211724, 7441},
 {"Info3298702878-1633021", 211837, 7444},
 {"Info3298702878-1917793", 211950, 7447},
 {"Info3298702878-2340354", 212063, 7450},
 {"Info3298702878-6666238", 212175, 7453},
 {"Info3298702879-1409416", 212287, 7456},
 {"Info3298702879-1735401", 212399, 7459},
 {"Info3298702879-2180365", 212512, 7462},
 {"Info3298702879-8183178", 212624, 7465}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 296, 8, 58, "Section"],
Cell[878, 32, 237, 5, 25, "Text"],
Cell[1118, 39, 272, 6, 25, "Text"],
Cell[1393, 47, 84, 1, 20, "Text"],
Cell[1480, 50, 120, 3, 23, "Text"],
Cell[1603, 55, 2382, 37, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4022, 97, 92, 3, 54, "Section"],
Cell[4117, 102, 880, 15, 39, "Text"],
Cell[5000, 119, 500, 9, 39, "Text"],
Cell[5503, 130, 314, 7, 39, "Text"],
Cell[CellGroupData[{
Cell[5842, 141, 117, 3, 33, "SubsectionIcon"],
Cell[5962, 146, 176, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[6163, 156, 203, 7, 25, "Input"],
Cell[6369, 165, 66, 2, 24, "Output"]
}, Open  ]],
Cell[6450, 170, 93, 2, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6580, 177, 114, 3, 33, "SubsectionIcon"],
Cell[6697, 182, 253, 8, 23, "Text"],
Cell[6953, 192, 161, 5, 28, "DisplayMath"],
Cell[7117, 199, 171, 8, 23, "Text"],
Cell[7291, 209, 377, 10, 39, "Text"],
Cell[CellGroupData[{
Cell[7693, 223, 178, 6, 25, "Input"],
Cell[7874, 231, 264, 10, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8175, 246, 154, 5, 25, "Input"],
Cell[8332, 253, 264, 10, 35, "Output"]
}, Open  ]],
Cell[8611, 266, 99, 2, 23, "Text"],
Cell[8713, 270, 468, 13, 39, "Text"],
Cell[CellGroupData[{
Cell[9206, 287, 108, 4, 25, "Input"],
Cell[9317, 293, 372, 10, 23, "Print",
 CellTags->"Info3298628325-7411773"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9726, 308, 238, 8, 25, "Input"],
Cell[9967, 318, 326, 14, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10342, 338, 113, 3, 33, "SubsectionIcon"],
Cell[10458, 343, 173, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[10656, 352, 178, 6, 25, "Input"],
Cell[10837, 360, 121, 4, 24, "Output"]
}, Open  ]],
Cell[10973, 367, 171, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[11169, 376, 178, 6, 25, "Input"],
Cell[11350, 384, 66, 2, 24, "Output"]
}, Open  ]],
Cell[11431, 389, 267, 6, 23, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11747, 401, 91, 3, 54, "Section"],
Cell[CellGroupData[{
Cell[11863, 408, 109, 3, 33, "SubsectionIcon"],
Cell[11975, 413, 288, 9, 39, "Text"],
Cell[CellGroupData[{
Cell[12288, 426, 199, 7, 25, "Input"],
Cell[12490, 435, 66, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12593, 442, 194, 7, 25, "Input"],
Cell[12790, 451, 69, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12896, 458, 175, 6, 25, "Input"],
Cell[13074, 466, 70, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13181, 473, 220, 8, 25, "Input"],
Cell[13404, 483, 122, 4, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13575, 493, 105, 3, 33, "SubsectionIcon"],
Cell[13683, 498, 263, 7, 23, "Text"],
Cell[13949, 507, 177, 6, 23, "Text"],
Cell[14129, 515, 318, 12, 119, "Text"],
Cell[14450, 529, 304, 10, 23, "Text"],
Cell[14757, 541, 133, 4, 23, "Text"],
Cell[14893, 547, 152, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[15070, 557, 307, 10, 25, "Input"],
Cell[15380, 569, 570, 22, 24, "Output"]
}, Open  ]],
Cell[15965, 594, 128, 4, 23, "Text"],
Cell[CellGroupData[{
Cell[16118, 602, 321, 11, 25, "Input"],
Cell[16442, 615, 138, 4, 24, "Output"]
}, Open  ]],
Cell[16595, 622, 132, 4, 23, "Text"],
Cell[CellGroupData[{
Cell[16752, 630, 188, 6, 25, "Input"],
Cell[16943, 638, 448, 9, 23, "Message"],
Cell[17394, 649, 180, 4, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17623, 659, 107, 3, 33, "SubsectionIcon"],
Cell[17733, 664, 231, 9, 23, "Text"],
Cell[17967, 675, 115, 3, 28, "DisplayMath"],
Cell[CellGroupData[{
Cell[18107, 682, 175, 7, 25, "Input"],
Cell[18285, 691, 68, 2, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18402, 699, 109, 3, 33, "SubsectionIcon"],
Cell[18514, 704, 226, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[18765, 714, 110, 4, 25, "Input"],
Cell[18878, 720, 68, 2, 24, "Output"]
}, Open  ]],
Cell[18961, 725, 179, 5, 23, "Text"],
Cell[19143, 732, 128, 5, 25, "Input"],
Cell[CellGroupData[{
Cell[19296, 741, 110, 4, 25, "Input"],
Cell[19409, 747, 84, 3, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19530, 755, 89, 3, 25, "Input"],
Cell[19622, 760, 84, 3, 24, "Output"]
}, Open  ]],
Cell[19721, 766, 209, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[19955, 775, 210, 8, 25, "Input"],
Cell[20168, 785, 853, 39, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21070, 830, 116, 3, 33, "SubsectionIcon"],
Cell[21189, 835, 688, 12, 71, "Text"],
Cell[21880, 849, 188, 6, 23, "Text"],
Cell[22071, 857, 521, 10, 55, "Text"],
Cell[22595, 869, 459, 9, 55, "Text"],
Cell[23057, 880, 241, 8, 51, "DisplayMath"],
Cell[23301, 890, 334, 12, 53, "DisplayMath"],
Cell[23638, 904, 283, 10, 53, "DisplayMath"],
Cell[23924, 916, 449, 16, 53, "DisplayMath"],
Cell[24376, 934, 316, 11, 51, "DisplayMath"],
Cell[24695, 947, 395, 14, 53, "DisplayMath"],
Cell[25093, 963, 291, 10, 51, "DisplayMath"],
Cell[25387, 975, 249, 6, 39, "Text"],
Cell[25639, 983, 223, 6, 23, "Text"],
Cell[25865, 991, 185, 5, 23, "Text"],
Cell[26053, 998, 348, 7, 39, "Text"],
Cell[26404, 1007, 146, 4, 28, "DisplayMath"],
Cell[26553, 1013, 191, 5, 23, "Text"],
Cell[26747, 1020, 155, 5, 23, "Text"],
Cell[26905, 1027, 145, 5, 23, "Text"],
Cell[27053, 1034, 206, 5, 23, "Text"],
Cell[27262, 1041, 165, 5, 23, "Text"],
Cell[27430, 1048, 98, 2, 23, "Text"],
Cell[27531, 1052, 618, 19, 55, "Text"],
Cell[28152, 1073, 524, 15, 55, "Text"],
Cell[28679, 1090, 275, 6, 39, "Text"],
Cell[28957, 1098, 137, 4, 23, "Text"],
Cell[29097, 1104, 135, 4, 23, "Text"],
Cell[29235, 1110, 185, 5, 23, "Text"],
Cell[29423, 1117, 149, 5, 23, "Text"],
Cell[29575, 1124, 169, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[29769, 1133, 179, 6, 25, "Input"],
Cell[29951, 1141, 67, 2, 24, "Output"]
}, Open  ]],
Cell[30033, 1146, 225, 8, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30295, 1159, 113, 3, 33, "SubsectionIcon"],
Cell[30411, 1164, 752, 28, 55, "Text"],
Cell[31166, 1194, 329, 11, 39, "Text"],
Cell[CellGroupData[{
Cell[31520, 1209, 219, 7, 25, "Input"],
Cell[31742, 1218, 122, 4, 24, "Output"]
}, Open  ]],
Cell[31879, 1225, 226, 6, 23, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32154, 1237, 88, 3, 54, "Section"],
Cell[CellGroupData[{
Cell[32267, 1244, 93, 3, 33, "SubsectionIcon"],
Cell[32363, 1249, 211, 7, 23, "Text"],
Cell[32577, 1258, 278, 7, 39, "Text"],
Cell[32858, 1267, 128, 6, 23, "Text"],
Cell[32989, 1275, 133, 6, 23, "Text"],
Cell[33125, 1283, 134, 6, 23, "Text"],
Cell[33262, 1291, 94, 2, 23, "Text"],
Cell[33359, 1295, 99, 2, 23, "Text"],
Cell[33461, 1299, 100, 2, 23, "Text"],
Cell[33564, 1303, 95, 2, 23, "Text"],
Cell[33662, 1307, 100, 2, 23, "Text"],
Cell[33765, 1311, 101, 2, 23, "Text"],
Cell[33869, 1315, 69, 2, 23, "Text"],
Cell[33941, 1319, 619, 13, 55, "Text"],
Cell[34563, 1334, 431, 14, 39, "Text"],
Cell[34997, 1350, 445, 13, 39, "Text"],
Cell[35445, 1365, 352, 12, 39, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35834, 1382, 117, 3, 33, "SubsectionIcon"],
Cell[35954, 1387, 288, 8, 39, "Text"],
Cell[CellGroupData[{
Cell[36267, 1399, 191, 7, 25, "Input"],
Cell[36461, 1408, 70, 2, 24, "Output"]
}, Open  ]],
Cell[36546, 1413, 210, 5, 23, "Text"],
Cell[36759, 1420, 436, 12, 39, "Text"],
Cell[37198, 1434, 160, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[37383, 1443, 167, 6, 28, "Input"],
Cell[37553, 1451, 70, 2, 24, "Output"]
}, Open  ]],
Cell[37638, 1456, 211, 7, 23, "Text"],
Cell[CellGroupData[{
Cell[37874, 1467, 191, 7, 28, "Input"],
Cell[38068, 1476, 70, 2, 24, "Output"]
}, Open  ]],
Cell[38153, 1481, 385, 12, 23, "Text"],
Cell[CellGroupData[{
Cell[38563, 1497, 198, 7, 28, "Input"],
Cell[38764, 1506, 70, 2, 24, "Output"]
}, Open  ]],
Cell[38849, 1511, 206, 7, 23, "Text"],
Cell[CellGroupData[{
Cell[39080, 1522, 172, 6, 28, "Input"],
Cell[39255, 1530, 70, 2, 24, "Output"]
}, Open  ]],
Cell[39340, 1535, 246, 8, 23, "Text"],
Cell[CellGroupData[{
Cell[39611, 1547, 197, 7, 28, "Input"],
Cell[39811, 1556, 70, 2, 24, "Output"]
}, Open  ]],
Cell[39896, 1561, 208, 7, 23, "Text"],
Cell[CellGroupData[{
Cell[40129, 1572, 191, 7, 28, "Input"],
Cell[40323, 1581, 70, 2, 24, "Output"]
}, Open  ]],
Cell[40408, 1586, 369, 8, 39, "Text"],
Cell[CellGroupData[{
Cell[40802, 1598, 204, 7, 28, "Input"],
Cell[41009, 1607, 70, 2, 24, "Output"]
}, Open  ]],
Cell[41094, 1612, 199, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[41318, 1622, 191, 7, 28, "Input"],
Cell[41512, 1631, 70, 2, 24, "Output"]
}, Open  ]],
Cell[41597, 1636, 285, 9, 23, "Text"],
Cell[CellGroupData[{
Cell[41907, 1649, 192, 7, 28, "Input"],
Cell[42102, 1658, 70, 2, 24, "Output"]
}, Open  ]],
Cell[42187, 1663, 85, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[42297, 1669, 191, 7, 28, "Input"],
Cell[42491, 1678, 71, 2, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42611, 1686, 143, 4, 33, "SubsectionIcon"],
Cell[42757, 1692, 338, 9, 39, "Text"],
Cell[43098, 1703, 206, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[43329, 1712, 227, 8, 28, "Input"],
Cell[43559, 1722, 70, 2, 24, "Output"]
}, Open  ]],
Cell[43644, 1727, 161, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[43830, 1736, 187, 7, 28, "Input"],
Cell[44020, 1745, 71, 2, 24, "Output"]
}, Open  ]],
Cell[44106, 1750, 160, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[44291, 1759, 168, 6, 28, "Input"],
Cell[44462, 1767, 70, 2, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44581, 1775, 144, 4, 33, "SubsectionIcon"],
Cell[44728, 1781, 340, 9, 39, "Text"],
Cell[CellGroupData[{
Cell[45093, 1794, 188, 7, 28, "Input"],
Cell[45284, 1803, 70, 2, 24, "Output"]
}, Open  ]],
Cell[45369, 1808, 211, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[45605, 1818, 169, 6, 28, "Input"],
Cell[45777, 1826, 70, 2, 24, "Output"]
}, Open  ]],
Cell[45862, 1831, 231, 8, 23, "Text"],
Cell[CellGroupData[{
Cell[46118, 1843, 226, 8, 28, "Input"],
Cell[46347, 1853, 71, 2, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46467, 1861, 115, 3, 33, "SubsectionIcon"],
Cell[46585, 1866, 165, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[46775, 1875, 241, 9, 27, "Input"],
Cell[47019, 1886, 70, 2, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47138, 1894, 115, 3, 33, "SubsectionIcon"],
Cell[47256, 1899, 289, 6, 39, "Text"],
Cell[47548, 1907, 606, 22, 39, "Text"],
Cell[CellGroupData[{
Cell[48179, 1933, 219, 8, 28, "Input"],
Cell[48401, 1943, 71, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48509, 1950, 240, 9, 28, "Input"],
Cell[48752, 1961, 71, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48860, 1968, 242, 9, 28, "Input"],
Cell[49105, 1979, 70, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49212, 1986, 247, 9, 28, "Input"],
Cell[49462, 1997, 71, 2, 24, "Output"]
}, Open  ]],
Cell[49548, 2002, 464, 16, 39, "Text"],
Cell[CellGroupData[{
Cell[50037, 2022, 192, 7, 28, "Input"],
Cell[50232, 2031, 70, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50339, 2038, 292, 11, 28, "Input"],
Cell[50634, 2051, 70, 2, 24, "Output"]
}, Open  ]],
Cell[50719, 2056, 255, 6, 23, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51023, 2068, 93, 3, 54, "Section"],
Cell[CellGroupData[{
Cell[51141, 2075, 105, 3, 33, "SubsectionIcon"],
Cell[51249, 2080, 576, 11, 55, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51862, 2096, 109, 3, 33, "SubsectionIcon"],
Cell[51974, 2101, 389, 8, 55, "Text"],
Cell[52366, 2111, 247, 9, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52650, 2125, 198, 9, 33, "SubsectionIcon"],
Cell[52851, 2136, 280, 7, 39, "Text"],
Cell[53134, 2145, 74, 2, 28, "DisplayMath"],
Cell[53211, 2149, 252, 6, 39, "Text"],
Cell[53466, 2157, 248, 6, 39, "Text"],
Cell[53717, 2165, 156, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[53898, 2175, 177, 7, 25, "Input"],
Cell[54078, 2184, 131, 5, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54246, 2194, 203, 7, 25, "Input"],
Cell[54452, 2203, 67, 2, 24, "Output"]
}, Open  ]],
Cell[54534, 2208, 367, 12, 39, "Text"],
Cell[CellGroupData[{
Cell[54926, 2224, 105, 4, 25, "Input"],
Cell[55034, 2230, 77, 2, 21, "Print",
 CellTags->"Info3298628328-7397595"],
Cell[55114, 2234, 792, 24, 20, "Print",
 CellTags->"Info3298628328-7397595"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55943, 2263, 109, 4, 25, "Input"],
Cell[56055, 2269, 81, 2, 21, "Print",
 CellTags->"Info3298628328-4448021"],
Cell[56139, 2273, 712, 21, 20, "Print",
 CellTags->"Info3298628328-4448021"]
}, Open  ]],
Cell[56866, 2297, 891, 25, 71, "Text"],
Cell[CellGroupData[{
Cell[57782, 2326, 126, 4, 25, "Input"],
Cell[57911, 2332, 152, 5, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58100, 2342, 113, 4, 25, "Input"],
Cell[58216, 2348, 356, 9, 23, "Print",
 CellTags->"Info3298628328-8384155"]
}, Open  ]],
Cell[58587, 2360, 295, 10, 23, "Text"],
Cell[CellGroupData[{
Cell[58907, 2374, 140, 5, 25, "Input"],
Cell[59050, 2381, 67, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59154, 2388, 88, 3, 25, "Input"],
Cell[59245, 2393, 67, 2, 24, "Output"]
}, Open  ]],
Cell[59327, 2398, 162, 5, 25, "Input"],
Cell[CellGroupData[{
Cell[59514, 2407, 126, 4, 25, "Input"],
Cell[59643, 2413, 131, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59811, 2422, 140, 5, 25, "Input"],
Cell[59954, 2429, 332, 8, 23, "Message"],
Cell[60289, 2439, 67, 2, 24, "Output"]
}, Open  ]],
Cell[60371, 2444, 160, 5, 25, "Input"],
Cell[CellGroupData[{
Cell[60556, 2453, 126, 4, 25, "Input"],
Cell[60685, 2459, 152, 5, 24, "Output"]
}, Open  ]],
Cell[60852, 2467, 276, 6, 39, "Text"],
Cell[CellGroupData[{
Cell[61153, 2477, 301, 11, 25, "Input"],
Cell[61457, 2490, 101, 3, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61595, 2498, 109, 4, 25, "Input"],
Cell[61707, 2504, 81, 2, 21, "Print",
 CellTags->"Info3298628328-8025855"],
Cell[61791, 2508, 754, 22, 20, "Print",
 CellTags->"Info3298628328-8025855"]
}, Open  ]],
Cell[62560, 2533, 258, 8, 23, "Text"],
Cell[62821, 2543, 216, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[63062, 2552, 301, 11, 25, "Input"],
Cell[63366, 2565, 411, 9, 23, "Message"],
Cell[63780, 2576, 131, 5, 24, "Output"]
}, Open  ]],
Cell[63926, 2584, 342, 7, 39, "Text"],
Cell[CellGroupData[{
Cell[64293, 2595, 109, 4, 25, "Input"],
Cell[64405, 2601, 81, 2, 21, "Print",
 CellTags->"Info3298628329-3913320"],
Cell[64489, 2605, 800, 24, 20, "Print",
 CellTags->"Info3298628329-3913320"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65326, 2634, 105, 4, 25, "Input"],
Cell[65434, 2640, 77, 2, 21, "Print",
 CellTags->"Info3298628329-9296844"],
Cell[65514, 2644, 792, 24, 20, "Print",
 CellTags->"Info3298628329-9296844"]
}, Open  ]],
Cell[66321, 2671, 280, 10, 23, "Text"],
Cell[CellGroupData[{
Cell[66626, 2685, 105, 4, 25, "Input"],
Cell[66734, 2691, 77, 2, 21, "Print",
 CellTags->"Info3298628329-8766420"],
Cell[66814, 2695, 792, 24, 20, "Print",
 CellTags->"Info3298628329-8766420"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67643, 2724, 105, 4, 25, "Input"],
Cell[67751, 2730, 77, 2, 21, "Print",
 CellTags->"Info3298628329-8889146"],
Cell[67831, 2734, 792, 24, 20, "Print",
 CellTags->"Info3298628329-8889146"]
}, Open  ]],
Cell[68638, 2761, 342, 8, 39, "Text"],
Cell[CellGroupData[{
Cell[69005, 2773, 121, 4, 25, "Input"],
Cell[69129, 2779, 84, 2, 24, "Output"]
}, Open  ]],
Cell[69228, 2784, 257, 8, 23, "Text"],
Cell[69488, 2794, 344, 9, 39, "Text"],
Cell[69835, 2805, 224, 8, 25, "Input"],
Cell[CellGroupData[{
Cell[70084, 2817, 109, 4, 25, "Input"],
Cell[70196, 2823, 81, 2, 21, "Print",
 CellTags->"Info3298628329-9228028"],
Cell[70280, 2827, 712, 21, 20, "Print",
 CellTags->"Info3298628329-9228028"]
}, Open  ]],
Cell[71007, 2851, 224, 8, 25, "Input"],
Cell[CellGroupData[{
Cell[71256, 2863, 109, 4, 25, "Input"],
Cell[71368, 2869, 81, 2, 21, "Print",
 CellTags->"Info3298628329-9544687"],
Cell[71452, 2873, 712, 21, 20, "Print",
 CellTags->"Info3298628329-9544687"]
}, Open  ]],
Cell[72179, 2897, 339, 14, 23, "Text"],
Cell[72521, 2913, 362, 12, 39, "Text"],
Cell[72886, 2927, 243, 9, 23, "Text"],
Cell[73132, 2938, 119, 4, 25, "Input"],
Cell[CellGroupData[{
Cell[73276, 2946, 105, 4, 25, "Input"],
Cell[73384, 2952, 77, 2, 21, "Print",
 CellTags->"Info3298628329-6260929"]
}, Open  ]],
Cell[73476, 2957, 120, 4, 25, "Input"],
Cell[CellGroupData[{
Cell[73621, 2965, 105, 4, 25, "Input"],
Cell[73729, 2971, 343, 7, 23, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74121, 2984, 208, 9, 33, "SubsectionIcon"],
Cell[74332, 2995, 107, 2, 23, "Text"],
Cell[74442, 2999, 272, 7, 31, "DisplayMath"],
Cell[74717, 3008, 397, 8, 55, "Text"],
Cell[75117, 3018, 100, 2, 23, "Text"],
Cell[75220, 3022, 211, 7, 31, "DisplayMath"],
Cell[75434, 3031, 96, 2, 23, "Text"],
Cell[75533, 3035, 226, 8, 28, "Input"],
Cell[75762, 3045, 273, 8, 23, "Text"],
Cell[CellGroupData[{
Cell[76060, 3057, 105, 4, 25, "Input"],
Cell[76168, 3063, 77, 2, 21, "Print",
 CellTags->"Info3298628329-4117228"],
Cell[76248, 3067, 880, 26, 23, "Print",
 CellTags->"Info3298628329-4117228"]
}, Open  ]],
Cell[77143, 3096, 553, 17, 39, "Text"],
Cell[CellGroupData[{
Cell[77721, 3117, 133, 4, 25, "Input"],
Cell[77857, 3123, 147, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78041, 3132, 111, 4, 25, "Input"],
Cell[78155, 3138, 348, 9, 23, "Print",
 CellTags->"Info3298628330-5402807"]
}, Open  ]],
Cell[78518, 3150, 202, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[78745, 3159, 115, 4, 25, "Input"],
Cell[78863, 3165, 85, 2, 24, "Output"]
}, Open  ]],
Cell[78963, 3170, 236, 6, 39, "Text"],
Cell[CellGroupData[{
Cell[79224, 3180, 115, 4, 25, "Input"],
Cell[79342, 3186, 84, 2, 24, "Output"]
}, Open  ]],
Cell[79441, 3191, 360, 10, 39, "Text"],
Cell[79804, 3203, 158, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[79987, 3213, 105, 4, 25, "Input"],
Cell[80095, 3219, 77, 2, 21, "Print",
 CellTags->"Info3298628330-4265513"],
Cell[80175, 3223, 740, 22, 23, "Print",
 CellTags->"Info3298628330-4265513"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80952, 3250, 115, 4, 25, "Input"],
Cell[81070, 3256, 67, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81174, 3263, 115, 4, 25, "Input"],
Cell[81292, 3269, 67, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81396, 3276, 105, 4, 25, "Input"],
Cell[81504, 3282, 77, 2, 21, "Print",
 CellTags->"Info3298628330-6113737"],
Cell[81584, 3286, 740, 22, 23, "Print",
 CellTags->"Info3298628330-6113737"]
}, Open  ]],
Cell[82339, 3311, 333, 10, 39, "Text"],
Cell[82675, 3323, 128, 5, 25, "Input"],
Cell[82806, 3330, 158, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[82989, 3340, 105, 4, 25, "Input"],
Cell[83097, 3346, 77, 2, 21, "Print",
 CellTags->"Info3298628330-2192481"],
Cell[83177, 3350, 740, 22, 23, "Print",
 CellTags->"Info3298628330-2192481"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83954, 3377, 115, 4, 25, "Input"],
Cell[84072, 3383, 67, 2, 24, "Output"]
}, Open  ]],
Cell[84154, 3388, 161, 6, 23, "Text"],
Cell[84318, 3396, 128, 5, 25, "Input"],
Cell[84449, 3403, 140, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[84614, 3412, 105, 4, 25, "Input"],
Cell[84722, 3418, 77, 2, 21, "Print",
 CellTags->"Info3298628330-9622315"],
Cell[84802, 3422, 741, 22, 23, "Print",
 CellTags->"Info3298628330-9622315"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85580, 3449, 115, 4, 25, "Input"],
Cell[85698, 3455, 67, 2, 24, "Output"]
}, Open  ]],
Cell[85780, 3460, 316, 10, 39, "Text"],
Cell[86099, 3472, 504, 10, 55, "Text"],
Cell[86606, 3484, 237, 9, 28, "Input"],
Cell[CellGroupData[{
Cell[86868, 3497, 105, 4, 25, "Input"],
Cell[86976, 3503, 77, 2, 21, "Print",
 CellTags->"Info3298628330-6071061"],
Cell[87056, 3507, 866, 26, 23, "Print",
 CellTags->"Info3298628330-6071061"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87959, 3538, 105, 4, 25, "Input"],
Cell[88067, 3544, 77, 2, 21, "Print",
 CellTags->"Info3298628330-8824378"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88181, 3551, 115, 4, 25, "Input"],
Cell[88299, 3557, 67, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88403, 3564, 105, 4, 25, "Input"],
Cell[88511, 3570, 77, 2, 21, "Print",
 CellTags->"Info3298628331-5924008"],
Cell[88591, 3574, 704, 21, 20, "Print",
 CellTags->"Info3298628331-5924008"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89344, 3601, 124, 3, 33, "SubsectionIcon"],
Cell[89471, 3606, 517, 15, 39, "Text"],
Cell[89991, 3623, 228, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[90244, 3635, 115, 4, 25, "Input"],
Cell[90362, 3641, 84, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90483, 3648, 115, 4, 25, "Input"],
Cell[90601, 3654, 94, 3, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90744, 3663, 121, 3, 33, "SubsectionIcon"],
Cell[90868, 3668, 585, 16, 55, "Text"],
Cell[91456, 3686, 378, 8, 39, "Text"],
Cell[91837, 3696, 143, 6, 23, "Text"],
Cell[91983, 3704, 247, 8, 28, "DisplayMath"],
Cell[92233, 3714, 67, 2, 23, "Text"],
Cell[92303, 3718, 300, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[92628, 3733, 106, 4, 25, "Input"],
Cell[92737, 3739, 77, 2, 21, "Print",
 CellTags->"Info3298628331-8580459"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92851, 3746, 116, 4, 25, "Input"],
Cell[92970, 3752, 68, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93075, 3759, 106, 4, 25, "Input"],
Cell[93184, 3765, 77, 2, 21, "Print",
 CellTags->"Info3298628331-4790402"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93310, 3773, 109, 3, 33, "SubsectionIcon"],
Cell[93422, 3778, 335, 7, 39, "Text"],
Cell[93760, 3787, 106, 2, 23, "Text"],
Cell[93869, 3791, 188, 5, 23, "Text"],
Cell[94060, 3798, 472, 9, 55, "Text"],
Cell[94535, 3809, 276, 9, 47, "Input"],
Cell[94814, 3820, 84, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[94923, 3826, 106, 4, 25, "Input"],
Cell[95032, 3832, 77, 2, 21, "Print",
 CellTags->"Info3298628331-9832253"],
Cell[95112, 3836, 904, 28, 66, "Print",
 CellTags->"Info3298628331-9832253"]
}, Open  ]],
Cell[96031, 3867, 139, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[96195, 3877, 117, 4, 25, "Input"],
Cell[96315, 3883, 71, 2, 24, "Output"]
}, Open  ]],
Cell[96401, 3888, 171, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[96597, 3898, 116, 4, 25, "Input"],
Cell[96716, 3904, 70, 2, 24, "Output"]
}, Open  ]],
Cell[96801, 3909, 371, 11, 39, "Text"],
Cell[97175, 3922, 237, 6, 23, "Text"],
Cell[97415, 3930, 327, 9, 39, "Text"],
Cell[97745, 3941, 341, 7, 39, "Text"],
Cell[98089, 3950, 164, 6, 28, "Input"],
Cell[98256, 3958, 172, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[98453, 3968, 116, 4, 25, "Input"],
Cell[98572, 3974, 69, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98678, 3981, 106, 4, 25, "Input"],
Cell[98787, 3987, 77, 2, 21, "Print",
 CellTags->"Info3298628331-7734930"],
Cell[98867, 3991, 900, 28, 62, "Print",
 CellTags->"Info3298628331-7734930"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99828, 4026, 100, 3, 54, "Section"],
Cell[99931, 4031, 843, 18, 71, "Text"],
Cell[CellGroupData[{
Cell[100799, 4053, 182, 9, 33, "SubsectionIcon"],
Cell[100984, 4064, 155, 6, 23, "Text"],
Cell[101142, 4072, 113, 3, 28, "DisplayMath"],
Cell[101258, 4077, 130, 4, 23, "Text"],
Cell[101391, 4083, 459, 13, 39, "Text"],
Cell[101853, 4098, 120, 4, 25, "Input"],
Cell[CellGroupData[{
Cell[101998, 4106, 334, 11, 25, "Input"],
Cell[102335, 4119, 133, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102505, 4128, 334, 11, 25, "Input"],
Cell[102842, 4141, 133, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103012, 4150, 553, 18, 25, "Input"],
Cell[103568, 4170, 133, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103738, 4179, 553, 18, 25, "Input"],
Cell[104294, 4199, 133, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104464, 4208, 553, 18, 25, "Input"],
Cell[105020, 4228, 133, 4, 24, "Output"]
}, Open  ]],
Cell[105168, 4235, 108, 2, 23, "Text"],
Cell[105279, 4239, 225, 7, 28, "DisplayMath"],
Cell[105507, 4248, 67, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[105599, 4254, 278, 10, 25, "Input"],
Cell[105880, 4266, 123, 4, 24, "Output"]
}, Open  ]],
Cell[106018, 4273, 451, 11, 55, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106506, 4289, 189, 9, 33, "SubsectionIcon"],
Cell[106698, 4300, 162, 6, 23, "Text"],
Cell[106863, 4308, 120, 3, 28, "DisplayMath"],
Cell[106986, 4313, 78, 2, 23, "Text"],
Cell[107067, 4317, 239, 7, 28, "DisplayMath"],
Cell[107309, 4326, 130, 4, 23, "Text"],
Cell[107442, 4332, 517, 14, 55, "Text"],
Cell[107962, 4348, 67, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[108054, 4354, 560, 18, 25, "Input"],
Cell[108617, 4374, 133, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108787, 4383, 560, 18, 25, "Input"],
Cell[109350, 4403, 133, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109520, 4412, 560, 18, 25, "Input"],
Cell[110083, 4432, 133, 4, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110265, 4442, 131, 3, 33, "SubsectionIcon"],
Cell[110399, 4447, 407, 14, 39, "Text"],
Cell[110809, 4463, 355, 12, 39, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111201, 4480, 128, 3, 33, "SubsectionIcon"],
Cell[111332, 4485, 258, 7, 39, "Text"],
Cell[CellGroupData[{
Cell[111615, 4496, 279, 10, 25, "Input"],
Cell[111897, 4508, 123, 4, 24, "Output"]
}, Open  ]],
Cell[112035, 4515, 341, 9, 39, "Text"],
Cell[112379, 4526, 936, 29, 105, "DisplayMath"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113364, 4561, 108, 3, 54, "Section"],
Cell[113475, 4566, 266, 7, 23, "Text"],
Cell[CellGroupData[{
Cell[113766, 4577, 108, 3, 33, "SubsectionIcon"],
Cell[113877, 4582, 103, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[114005, 4588, 120, 4, 25, "Input"],
Cell[114128, 4594, 86, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114251, 4601, 118, 4, 25, "Input"],
Cell[114372, 4607, 86, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114495, 4614, 118, 4, 25, "Input"],
Cell[114616, 4620, 86, 2, 24, "Output"]
}, Open  ]],
Cell[114717, 4625, 177, 7, 23, "Text"],
Cell[CellGroupData[{
Cell[114919, 4636, 181, 6, 25, "Input"],
Cell[115103, 4644, 86, 2, 24, "Output"]
}, Open  ]],
Cell[115204, 4649, 203, 5, 23, "Text"],
Cell[115410, 4656, 362, 7, 39, "Text"],
Cell[115775, 4665, 146, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[115946, 4674, 144, 5, 25, "Input"],
Cell[116093, 4681, 191, 6, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116321, 4692, 286, 9, 25, "Input"],
Cell[116610, 4703, 299, 7, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116946, 4715, 281, 9, 25, "Input"],
Cell[117230, 4726, 4377, 118, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121644, 4849, 145, 5, 25, "Input"],
Cell[121792, 4856, 4009, 109, 61, "Output"]
}, Open  ]],
Cell[125816, 4968, 150, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[125991, 4977, 688, 21, 25, "Input"],
Cell[126682, 5000, 4009, 109, 61, "Output"]
}, Open  ]],
Cell[130706, 5112, 80, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[130811, 5118, 465, 15, 25, "Input"],
Cell[131279, 5135, 4009, 109, 61, "Output"]
}, Open  ]],
Cell[135303, 5247, 133, 4, 23, "Text"],
Cell[CellGroupData[{
Cell[135461, 5255, 480, 16, 28, "Input"],
Cell[135944, 5273, 4006, 108, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139999, 5387, 106, 3, 33, "SubsectionIcon"],
Cell[140108, 5392, 270, 8, 23, "Text"],
Cell[140381, 5402, 360, 12, 39, "Text"],
Cell[140744, 5416, 224, 6, 23, "Text"],
Cell[140971, 5424, 169, 6, 28, "Input"],
Cell[141143, 5432, 151, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[141319, 5441, 183, 7, 25, "Input"],
Cell[141505, 5450, 69, 2, 24, "Output"]
}, Open  ]],
Cell[141589, 5455, 183, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[141797, 5464, 208, 8, 25, "Input"],
Cell[142008, 5474, 70, 2, 24, "Output"]
}, Open  ]],
Cell[142093, 5479, 243, 6, 39, "Text"],
Cell[142339, 5487, 172, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[142536, 5496, 232, 9, 25, "Input"],
Cell[142771, 5507, 430, 9, 27, "Message"],
Cell[143204, 5518, 165, 6, 31, "Output"]
}, Open  ]],
Cell[143384, 5527, 176, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[143585, 5536, 346, 13, 25, "Input"],
Cell[143934, 5551, 68, 2, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144051, 5559, 114, 3, 33, "SubsectionIcon"],
Cell[144168, 5564, 155, 5, 23, "Text"],
Cell[144326, 5571, 108, 3, 28, "DisplayMath"],
Cell[144437, 5576, 180, 6, 28, "DisplayMath"],
Cell[144620, 5584, 218, 7, 23, "Text"],
Cell[CellGroupData[{
Cell[144863, 5595, 281, 11, 25, "Input"],
Cell[145147, 5608, 70, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145254, 5615, 315, 11, 25, "Input"],
Cell[145572, 5628, 70, 2, 24, "Output"]
}, Open  ]],
Cell[145657, 5633, 95, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[145777, 5639, 298, 11, 25, "Input"],
Cell[146078, 5652, 70, 2, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146185, 5659, 298, 11, 25, "Input"],
Cell[146486, 5672, 70, 2, 24, "Output"]
}, Open  ]],
Cell[146571, 5677, 159, 5, 23, "Text"],
Cell[146733, 5684, 222, 9, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146992, 5698, 109, 3, 33, "SubsectionIcon"],
Cell[147104, 5703, 413, 10, 39, "Text"],
Cell[CellGroupData[{
Cell[147542, 5717, 121, 3, 23, "SubsubsectionIcon"],
Cell[CellGroupData[{
Cell[147688, 5724, 110, 4, 25, "Input"],
Cell[147801, 5730, 372, 10, 23, "Print",
 CellTags->"Info3298702877-6373140"]
}, Open  ]],
Cell[148188, 5743, 367, 11, 39, "Text"],
Cell[CellGroupData[{
Cell[148580, 5758, 298, 11, 25, "Input"],
Cell[148881, 5771, 216, 8, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149134, 5784, 308, 11, 25, "Input"],
Cell[149445, 5797, 221, 8, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149715, 5811, 119, 3, 23, "SubsubsectionIcon"],
Cell[CellGroupData[{
Cell[149859, 5818, 108, 4, 25, "Input"],
Cell[149970, 5824, 383, 10, 42, "Print",
 CellTags->"Info3298702878-1917793"]
}, Open  ]],
Cell[150368, 5837, 141, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[150534, 5847, 210, 7, 25, "Input"],
Cell[150747, 5856, 249, 8, 24, "Output"]
}, Open  ]],
Cell[151011, 5867, 273, 9, 23, "Text"],
Cell[CellGroupData[{
Cell[151309, 5880, 296, 11, 25, "Input"],
Cell[151608, 5893, 273, 10, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151918, 5908, 330, 12, 25, "Input"],
Cell[152251, 5922, 335, 12, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152635, 5940, 125, 3, 23, "SubsubsectionIcon"],
Cell[CellGroupData[{
Cell[152785, 5947, 114, 4, 25, "Input"],
Cell[152902, 5953, 421, 10, 42, "Print",
 CellTags->"Info3298702878-1633021"]
}, Open  ]],
Cell[153338, 5966, 141, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[153504, 5976, 322, 11, 25, "Input"],
Cell[153829, 5989, 285, 10, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154151, 6004, 325, 11, 25, "Input"],
Cell[154479, 6017, 270, 10, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154786, 6032, 325, 11, 25, "Input"],
Cell[155114, 6045, 195, 7, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155358, 6058, 164, 7, 23, "SubsubsectionIcon"],
Cell[155525, 6067, 167, 5, 23, "Text"],
Cell[155695, 6074, 302, 8, 39, "Text"],
Cell[CellGroupData[{
Cell[156022, 6086, 113, 4, 25, "Input"],
Cell[156138, 6092, 321, 9, 23, "Print",
 CellTags->"Info3298702878-2340354"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156496, 6106, 352, 11, 25, "Input"],
Cell[156851, 6119, 196, 6, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157084, 6130, 160, 5, 25, "Input"],
Cell[157247, 6137, 196, 6, 24, "Output"]
}, Open  ]],
Cell[157458, 6146, 271, 8, 23, "Text"],
Cell[CellGroupData[{
Cell[157754, 6158, 109, 4, 25, "Input"],
Cell[157866, 6164, 296, 9, 23, "Print",
 CellTags->"Info3298702878-6666238"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158199, 6178, 156, 5, 25, "Input"],
Cell[158358, 6185, 86, 2, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158493, 6193, 176, 7, 23, "SubsubsectionIcon"],
Cell[158672, 6202, 481, 11, 55, "Text"],
Cell[CellGroupData[{
Cell[159178, 6217, 119, 4, 25, "Input"],
Cell[159300, 6223, 381, 10, 23, "Print",
 CellTags->"Info3298702879-1735401"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159718, 6238, 115, 4, 25, "Input"],
Cell[159836, 6244, 333, 9, 23, "Print",
 CellTags->"Info3298702879-2180365"]
}, Open  ]],
Cell[160184, 6256, 69, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[160278, 6262, 290, 9, 25, "Input"],
Cell[160571, 6273, 133, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160741, 6282, 352, 12, 25, "Input"],
Cell[161096, 6296, 164, 5, 24, "Output"]
}, Open  ]],
Cell[161275, 6304, 259, 8, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161571, 6317, 164, 7, 23, "SubsubsectionIcon"],
Cell[CellGroupData[{
Cell[161760, 6328, 113, 4, 25, "Input"],
Cell[161876, 6334, 301, 9, 23, "Print",
 CellTags->"Info3298702879-1409416"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162214, 6348, 109, 4, 25, "Input"],
Cell[162326, 6354, 292, 9, 23, "Print",
 CellTags->"Info3298702879-8183178"]
}, Open  ]],
Cell[162633, 6366, 375, 9, 39, "Text"],
Cell[CellGroupData[{
Cell[163033, 6379, 224, 7, 25, "Input"],
Cell[163260, 6388, 110, 3, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163407, 6396, 228, 7, 25, "Input"],
Cell[163638, 6405, 245, 7, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163920, 6417, 278, 9, 25, "Input"],
Cell[164201, 6428, 156, 5, 24, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[164430, 6441, 553, 10, 54, "Section"],
Cell[164986, 6453, 2373, 37, 58, "Text"],
Cell[167362, 6492, 2898, 44, 183, "Text"],
Cell[170263, 6538, 2251, 34, 55, "Text"],
Cell[CellGroupData[{
Cell[172539, 6576, 549, 12, 33, "SubsectionIcon"],
Cell[173091, 6590, 990, 18, 23, "Text"],
Cell[174084, 6610, 3561, 91, 192, "Input"],
Cell[177648, 6703, 2773, 42, 183, "Text"],
Cell[180424, 6747, 3861, 93, 64, "Input"],
Cell[184288, 6842, 760, 15, 39, "Text"],
Cell[185051, 6859, 6240, 159, 262, "Input"],
Cell[191294, 7020, 1590, 30, 55, "Text"],
Cell[192887, 7052, 1493, 44, 28, "Input"],
Cell[194383, 7098, 2110, 32, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196530, 7135, 1616, 24, 33, "SubsectionIcon"],
Cell[198149, 7161, 2693, 41, 87, "Text"],
Cell[200845, 7204, 2763, 40, 23, "Text"],
Cell[203611, 7246, 2521, 37, 119, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
